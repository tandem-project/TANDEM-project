[
  {
    "serId": "TANDEM_ser2",
    "serName": "Notification Service",
    "serType": "FaaS Service",
    "serProvider": "INTRACOM TELECOM S.A.",
    "serDescription": "The user defines the sender, the recipients and the text of the e-mail message and the service responds whether the sending was successful or not",
    "serCategory": {
      "href": "string",
      "id": "serCat2",
      "name": "Notification Services",
      "version": "001"
    },
    "serVersion": "001",
	"state": "string",

    "serConfigParams": [{
     "serParamName": "smtp_server",
     "serParamType": "string", 
     "serParamValue": "string",
     "serParamDescr": "e-mail server address",
     "serParamTypicalValue": "string"
      }
	  
	 {
     "serParamName": "password",
     "serParamType": "string", 
     "serParamValue": "string",
     "serParamDescr": "sender password",
     "serParamTypicalValue": "string"
      }
	],
    
	"serOperations": [{
	"serOperationName": "SendNotification",
	"serOperationEndPoint": "/ICOM/NotificationService/SendNotification",
	"serOperationDescription": "send email Notification",
	"serOperationType": "Synchonous",
    "serInputParams": [{
     "serParamName": "sender_email",
     "serParamType": "string", 
     "serParamValue": "string",
     "serParamDescr": "e-mail address of the Sender",
     "serParamTypicalValue": "string"
      }
	 	  
	  {
     "serParamName": "receiver_email1",
     "serParamType": "string", 
     "serParamValue": "string",
     "serParamDescr": "e-mail address of the Recipient1",
     "serParamTypicalValue": "string"
      }
	  {
     "serParamName": "receiver_email2",
     "serParamType": "string", 
     "serParamValue": "string",
     "serParamDescr": "e-mail address of the Recipient2",
     "serParamTypicalValue": "string"
      }
	  
	 {
     "serParamName": "message_title",
     "serParamType": "string", 
     "serParamValue": "string",
     "serParamDescr": "The title of the message",
     "serParamTypicalValue": "string"
      }
	  
	  
	 {
     "serParamName": "message_body",
     "serParamType": "string", 
     "serParamValue": "string",
     "serParamDescr": "e-mail text message",
     "serParamTypicalValue": "string"
      }
],

    "serOutputParams": {
     "serParamName": "sending result",
     "serParamType": "success of failure codes", 
     "serParamValue": "201",
     "serParamDescr": "e-mail sending result, success or failure",
     "serParamTypicalValue": "string"
      },
	}
	]
    
     "serComputeReq": {
     "serMemorySize": "5",
	 "serMemorySizeMU": "Mb",
     "serCPUArchitecture": "X86", 
     "serNumVirtualCPUs": "100",
	 "serVirtualCPUClock": "string"
	 "serNumVirtualCPUsMU": "millicores",
     "serNumVirtualGPUs": "0"
	 "serNumVirtualCPUsMU": "millicores",
 
      },
    
      "serStorageReq": {
      "serTypeOfStorage": "string", 
      "serSizeOfStorage": "0",
	  "serSizeOfStorageMU": "Gb"
     },

     "serLatencyReq": {
      "serLatencyTimeUnit": "ms", 
      "serLatencyValue": "1000"
     },

   "serThroughputReq": {
      "serThroughputMU": "mbps", 
      "serThroughputValue": "0.01"
     },
    
     "serServiceReq": [{
      "serServiceId": "e-mail server"
     }],

    "serServiceOptional": [{
      "serServiceId": "string"
     }],

     "serSwImage": {
      "serSWImageId": "SWImage00015", 
      "serSWImageName": "SWImage00015",
      "serSWImageContainerFormat": "Docker",
      "serSWImageSizeinMBs": "0,5",
      "serSWImageOS": "SWImage00015",
      "serSWImageURL": "SWImage00015"
     },
    
  
    "serializer": "JSON",
	
	"transportType": "REST_HTTP",
	"transportProtocol": "TCP",
	
	
    "scopeOfLocality": "TANDEM_SYSTEM",
    "consumedLocalOnly": true,
    "isLocal": true,

 
    }
  }
]