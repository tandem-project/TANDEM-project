# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class ActivateSecuredSlice(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, slice_name: str=None, service_functions_names: List[str]=None):  # noqa: E501
        """ActivateSecuredSlice - a model defined in Swagger

        :param slice_name: The slice_name of this ActivateSecuredSlice.  # noqa: E501
        :type slice_name: str
        :param service_functions_names: The service_functions_names of this ActivateSecuredSlice.  # noqa: E501
        :type service_functions_names: List[str]
        """
        self.swagger_types = {
            'slice_name': str,
            'service_functions_names': List[str]
        }

        self.attribute_map = {
            'slice_name': 'slice_name',
            'service_functions_names': 'service_functions_names'
        }
        self._slice_name = slice_name
        self._service_functions_names = service_functions_names

    @classmethod
    def from_dict(cls, dikt) -> 'ActivateSecuredSlice':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The activateSecuredSlice of this ActivateSecuredSlice.  # noqa: E501
        :rtype: ActivateSecuredSlice
        """
        return util.deserialize_model(dikt, cls)

    @property
    def slice_name(self) -> str:
        """Gets the slice_name of this ActivateSecuredSlice.


        :return: The slice_name of this ActivateSecuredSlice.
        :rtype: str
        """
        return self._slice_name

    @slice_name.setter
    def slice_name(self, slice_name: str):
        """Sets the slice_name of this ActivateSecuredSlice.


        :param slice_name: The slice_name of this ActivateSecuredSlice.
        :type slice_name: str
        """

        self._slice_name = slice_name

    @property
    def service_functions_names(self) -> List[str]:
        """Gets the service_functions_names of this ActivateSecuredSlice.


        :return: The service_functions_names of this ActivateSecuredSlice.
        :rtype: List[str]
        """
        return self._service_functions_names

    @service_functions_names.setter
    def service_functions_names(self, service_functions_names: List[str]):
        """Sets the service_functions_names of this ActivateSecuredSlice.


        :param service_functions_names: The service_functions_names of this ActivateSecuredSlice.
        :type service_functions_names: List[str]
        """

        self._service_functions_names = service_functions_names
