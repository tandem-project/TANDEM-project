# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server.models.env_parameters import EnvParameters # noqa: F401,E501
from swagger_server.models.volume_mount_deploy import VolumeMountDeploy  # noqa: F401,E501
from swagger_server import util


class ServiceFunctionintoPaaS(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, service_function_identifier_name: str=None, volume_mounts: List[VolumeMountDeploy]=None, autoscaling_metric: str=None, env_parameters: List[EnvParameters]=None):  # noqa: E501
        """ServiceFunctionintoPaaS - a model defined in Swagger

        :param service_function_identifier_name: The service_function_identifier_name of this ServiceFunctionintoPaaS.  # noqa: E501
        :type service_function_identifier_name: str
        :param volume_mounts: The volume_mounts of this ServiceFunctionintoPaaS.  # noqa: E501
        :type volume_mounts: List[VolumeMountDeploy]
        :param autoscaling_metric: The autoscaling_metric of this ServiceFunctionintoPaaS.  # noqa: E501
        :type autoscaling_metric: str
        :param env_parameters: The env_parameters of this ServiceFunctionintoPaaS.  # noqa: E501
        :type env_parameters: List[EnvParameterName]
        """
        self.swagger_types = {
            'service_function_identifier_name': str,
            'volume_mounts': List[VolumeMountDeploy],
            'autoscaling_metric': str,
            'env_parameters': List[EnvParameters]
        }

        self.attribute_map = {
            'service_function_identifier_name': 'service_function_identifier_name',
            'volume_mounts': 'volume_mounts',
            'autoscaling_metric': 'autoscaling_metric',
            'env_parameters': 'env_parameters'
        }
        self._service_function_identifier_name = service_function_identifier_name
        self._volume_mounts = volume_mounts
        self._autoscaling_metric = autoscaling_metric
        self._env_parameters = env_parameters

    @classmethod
    def from_dict(cls, dikt) -> 'ServiceFunctionintoPaaS':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ServiceFunctionintoPaaS of this ServiceFunctionintoPaaS.  # noqa: E501
        :rtype: ServiceFunctionintoPaaS
        """
        return util.deserialize_model(dikt, cls)

    @property
    def service_function_identifier_name(self) -> str:
        """Gets the service_function_identifier_name of this ServiceFunctionintoPaaS.


        :return: The service_function_identifier_name of this ServiceFunctionintoPaaS.
        :rtype: str
        """
        return self._service_function_identifier_name

    @service_function_identifier_name.setter
    def service_function_identifier_name(self, service_function_identifier_name: str):
        """Sets the service_function_identifier_name of this ServiceFunctionintoPaaS.


        :param service_function_identifier_name: The service_function_identifier_name of this ServiceFunctionintoPaaS.
        :type service_function_identifier_name: str
        """

        self._service_function_identifier_name = service_function_identifier_name

    @property
    def volume_mounts(self) -> List[VolumeMountDeploy]:
        """Gets the volume_mounts of this ServiceFunctionintoPaaS.


        :return: The volume_mounts of this ServiceFunctionintoPaaS.
        :rtype: List[VolumeMountDeploy]
        """
        return self._volume_mounts

    @volume_mounts.setter
    def volume_mounts(self, volume_mounts: List[VolumeMountDeploy]):
        """Sets the volume_mounts of this ServiceFunctionintoPaaS.


        :param volume_mounts: The volume_mounts of this ServiceFunctionintoPaaS.
        :type volume_mounts: List[VolumeMountDeploy]
        """

        self._volume_mounts = volume_mounts

    @property
    def autoscaling_metric(self) -> str:
        """Gets the autoscaling_metric of this ServiceFunctionintoPaaS.


        :return: The autoscaling_metric of this ServiceFunctionintoPaaS.
        :rtype: str
        """
        return self._autoscaling_metric

    @autoscaling_metric.setter
    def autoscaling_metric(self, autoscaling_metric: str):
        """Sets the autoscaling_metric of this ServiceFunctionintoPaaS.


        :param autoscaling_metric: The autoscaling_metric of this ServiceFunctionintoPaaS.
        :type autoscaling_metric: str
        """

        self._autoscaling_metric = autoscaling_metric

    @property
    def env_parameters(self) -> List[EnvParameters]:
        """Gets the env_parameters of this ServiceFunctionintoPaaS.


        :return: The env_parameters of this ServiceFunctionintoPaaS.
        :rtype: List[EnvParameterName]
        """
        return self._env_parameters

    @env_parameters.setter
    def env_parameters(self, env_parameters: List[EnvParameters]):
        """Sets the env_parameters of this ServiceFunctionintoPaaS.


        :param env_parameters: The env_parameters of this ServiceFunctionintoPaaS.
        :type env_parameters: List[EnvParameterName]
        """

        self._env_parameters = env_parameters
