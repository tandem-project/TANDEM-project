apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.26.0 (40646f47)
  creationTimestamp: null
  labels:
    io.kompose.service: kubempcontr
  name: kubempcontr
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: kubempcontr
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.26.0 (40646f47)
      creationTimestamp: null
      labels:
        #io.kompose.network/netEMPkub: "true"
        io.kompose.service: kubempcontr
    spec:
      containers:
        - env:
            - name: KUBERNETES_MASTER_HOST
              #example value
              value: https://146.124.106.179:16443 #
            - name: KUBERNETES_MASTER_TOKEN
               #example value
              value: b3lIOWFQM3NUTWJpSUVBMDNGNmlmVG4wQkd5dXFmWTdFUlFWQVo3UnEycz0K 
            - name: EMP_STORAGE_URI
              value: mongodb://mongopiedge:27017
          image: nikospsar/kubernetes_paas_controller:latest
          name: kubempcontr
          ports:
            - containerPort: 8082
          resources: {}
          imagePullPolicy: Always
      restartPolicy: Always
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.26.0 (40646f47)
  creationTimestamp: null
  labels:
    io.kompose.service: kubempcontr
  name: kubempcontr
spec:
  type: NodePort
  ports:
    - name: "8082"
      nodePort: 32410
      port: 8082
      targetPort: 8082
  selector:
    io.kompose.service: kubempcontr
status:
  loadBalancer: {}
---
#apiVersion: v1
#kind: PersistentVolumeClaim
#metadata:
#  creationTimestamp: null
#  labels:
#    io.kompose.service: mongo-db
#  name: mongo-db
#spec:
#  accessModes:
#    - ReadWriteOnce
#  resources:
#    requests:
#      storage: 100Mi
#status: {}
#---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.26.0 (40646f47)
  creationTimestamp: null
  labels:
    io.kompose.service: mongopiedge
  name: mongopiedge
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: mongopiedge
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.26.0 (40646f47)
      creationTimestamp: null
      labels:
        #io.kompose.network/netEMPkub: "true"
        io.kompose.service: mongopiedge
    spec:
      containers:
        - image: mongo
          name: mongopiedge
          ports:
            - containerPort: 27017
          resources: {}
          volumeMounts:
            - mountPath: /data/db
              name: mongo-db
      restartPolicy: Always
      volumes:
        - name: mongo-db
          persistentVolumeClaim:
            claimName: mongo-db
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.26.0 (40646f47)
  creationTimestamp: null
  labels:
    io.kompose.service: mongopiedge
  name: mongopiedge
spec:
  type: NodePort
  ports:
    - name: "27017"
      nodePort: 32411
      port: 27017
      targetPort: 27017
  selector:
    io.kompose.service: mongopiedge
status:
  loadBalancer: {}
---
 apiVersion: networking.k8s.io/v1
 kind: NetworkPolicy
 metadata:
   creationTimestamp: null
   name: netEMPkub
 spec:
   ingress:
     - from:
         - podSelector:
             matchLabels:
               io.kompose.network/netEMPkub: "true"
   podSelector:
     matchLabels:
       io.kompose.network/netEMPkub: "true"
