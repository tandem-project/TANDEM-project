# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class EopRegistrationResponse(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, eop_name: str=None, eop_type: str=None, registration_status: str=None, service_consumer_id: str=None):  # noqa: E501
        """EopRegistrationResponse - a model defined in Swagger

        :param eop_name: The eop_name of this EopRegistrationResponse.  # noqa: E501
        :type eop_name: str
        :param eop_type: The eop_type of this EopRegistrationResponse.  # noqa: E501
        :type eop_type: str
        :param registration_status: The registration_status of this EopRegistrationResponse.  # noqa: E501
        :type registration_status: str
        :param service_consumer_id: The service_consumer_id of this EopRegistrationResponse.  # noqa: E501
        :type service_consumer_id: str
        """
        self.swagger_types = {
            'eop_name': str,
            'eop_type': str,
            'registration_status': str,
            'service_consumer_id': str
        }

        self.attribute_map = {
            'eop_name': 'eopName',
            'eop_type': 'eopType',
            'registration_status': 'registrationStatus',
            'service_consumer_id': 'serviceConsumerId'
        }
        self._eop_name = eop_name
        self._eop_type = eop_type
        self._registration_status = registration_status
        self._service_consumer_id = service_consumer_id

    @classmethod
    def from_dict(cls, dikt) -> 'EopRegistrationResponse':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The eopRegistrationResponse of this EopRegistrationResponse.  # noqa: E501
        :rtype: EopRegistrationResponse
        """
        return util.deserialize_model(dikt, cls)

    @property
    def eop_name(self) -> str:
        """Gets the eop_name of this EopRegistrationResponse.


        :return: The eop_name of this EopRegistrationResponse.
        :rtype: str
        """
        return self._eop_name

    @eop_name.setter
    def eop_name(self, eop_name: str):
        """Sets the eop_name of this EopRegistrationResponse.


        :param eop_name: The eop_name of this EopRegistrationResponse.
        :type eop_name: str
        """

        self._eop_name = eop_name

    @property
    def eop_type(self) -> str:
        """Gets the eop_type of this EopRegistrationResponse.


        :return: The eop_type of this EopRegistrationResponse.
        :rtype: str
        """
        return self._eop_type

    @eop_type.setter
    def eop_type(self, eop_type: str):
        """Sets the eop_type of this EopRegistrationResponse.


        :param eop_type: The eop_type of this EopRegistrationResponse.
        :type eop_type: str
        """

        self._eop_type = eop_type

    @property
    def registration_status(self) -> str:
        """Gets the registration_status of this EopRegistrationResponse.


        :return: The registration_status of this EopRegistrationResponse.
        :rtype: str
        """
        return self._registration_status

    @registration_status.setter
    def registration_status(self, registration_status: str):
        """Sets the registration_status of this EopRegistrationResponse.


        :param registration_status: The registration_status of this EopRegistrationResponse.
        :type registration_status: str
        """

        self._registration_status = registration_status

    @property
    def service_consumer_id(self) -> str:
        """Gets the service_consumer_id of this EopRegistrationResponse.


        :return: The service_consumer_id of this EopRegistrationResponse.
        :rtype: str
        """
        return self._service_consumer_id

    @service_consumer_id.setter
    def service_consumer_id(self, service_consumer_id: str):
        """Sets the service_consumer_id of this EopRegistrationResponse.


        :param service_consumer_id: The service_consumer_id of this EopRegistrationResponse.
        :type service_consumer_id: str
        """

        self._service_consumer_id = service_consumer_id
