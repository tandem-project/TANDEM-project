apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.26.0 (40646f47)
  creationTimestamp: null
  labels:
    io.kompose.service: piedgecontroller
  name: piedgecontroller
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: piedgecontroller
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.26.0 (40646f47)
      creationTimestamp: null
      labels:
        #io.kompose.network/netEMPkub: "true"
        io.kompose.service: piedgecontroller
    spec:
      containers:
        - env:
            - name: KUBERNETES_MASTER_HOST
              value: https://146.124.106.179:16443
            - name: KUBERNETES_MASTER_TOKEN
              value: b3lIOWFQM3NUTWJpSUVBMDNGNmlmVG4wQkd5dXFmWTdFUlFWQVo3UnEycz0K
            - name: EMP_STORAGE_URI
              value: mongodb://146.124.106.179:32411
          image: nikospsar/pi_edge_controller:1.1.0
          name: piedgecontroller
          ports:
            - containerPort: 8082
          resources: {}
          imagePullPolicy: Always
      restartPolicy: Always
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.26.0 (40646f47)
  creationTimestamp: null
  labels:
    io.kompose.service: piedgecontroller
  name: piedgecontroller
spec:
  type: NodePort
  ports:
    - name: "8080"
      nodePort: 32415
      port: 8080
      targetPort: 8080
  selector:
    io.kompose.service: piedgecontroller
status:
  loadBalancer: {}
---
#apiVersion: v1
#kind: PersistentVolumeClaim
#metadata:
#  creationTimestamp: null
#  labels:
#    io.kompose.service: mongo-db
#  name: mongo-db
#spec:
#  accessModes:
#    - ReadWriteOnce
#  resources:
#    requests:
#      storage: 100Mi
#status: {}
#---
#apiVersion: apps/v1
#kind: Deployment
#metadata:
#  annotations:
#    kompose.cmd: kompose convert
#    kompose.version: 1.26.0 (40646f47)
#  creationTimestamp: null
#  labels:
#    io.kompose.service: mongoemp
#  name: mongoemp
#spec:
#  replicas: 1
#  selector:
#    matchLabels:
#      io.kompose.service: mongoemp
#  strategy:
#    type: Recreate
#  template:
#    metadata:
#      annotations:
#        kompose.cmd: kompose convert
#        kompose.version: 1.26.0 (40646f47)
#      creationTimestamp: null
#      labels:
#        #io.kompose.network/netEMPkub: "true"
#        io.kompose.service: mongoemp
#    spec:
#      containers:
#        - image: mongo
#          name: mongoemp
#          ports:
#            - containerPort: 27017
#          resources: {}
#          volumeMounts:
#            - mountPath: /data/db
#              name: mongo-db
#      restartPolicy: Always
#      volumes:
#        - name: mongo-db
#          persistentVolumeClaim:
#            claimName: mongo-db
#status: {}
#---
#apiVersion: v1
#kind: Service
#metadata:
#  annotations:
#    kompose.cmd: kompose convert
#    kompose.version: 1.26.0 (40646f47)
#  creationTimestamp: null
#  labels:
#    io.kompose.service: mongoemp
#  name: mongoemp
#spec:
#  type: NodePort
#  ports:
#    - name: "27017"
#      nodePort: 32411
#      port: 27017
#      targetPort: 27017
#  selector:
#    io.kompose.service: mongoemp
#status:
#  loadBalancer: {}
#---
## apiVersion: networking.k8s.io/v1
## kind: NetworkPolicy
## metadata:
##   creationTimestamp: null
##   name: netEMPkub
## spec:
##   ingress:
##     - from:
##         - podSelector:
##             matchLabels:
##               io.kompose.network/netEMPkub: "true"
##   podSelector:
##     matchLabels:
##       io.kompose.network/netEMPkub: "true"
