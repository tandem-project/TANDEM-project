openapi: 3.0.0
info:
  title: ETSI GS MEC 013 - Location API
  description: The ETSI MEC ISG MEC013 Location API described using OpenAPI.
  contact:
    url: https://forge.etsi.org/rep/mec/gs013-location-api
  license:
    name: BSD-3-Clause
    url: https://forge.etsi.org/legal-matters
  version: 2.2.1
externalDocs:
  description: ETSI MEC013 V2.2.1 Location API
  url: http://www.etsi.org/deliver/etsi_gs/MEC/001_099/013/02.02.01_60/gs_mec013v020201p.pdf
servers:
- url: https://localhost/mec_platform
tags:
- name: location
paths:
  /queries/distance:
    get:
      tags:
      - location
      summary: UE Distance Lookup of a specific UE
      description: UE Distance Lookup between terminals or a terminal and a location
      operationId: distance_get
      parameters:
      - name: requester
        in: query
        description: Entity that is requesting the information
        required: false
        style: form
        explode: true
        schema:
          type: string
        x-exportParamName: Requester
      - name: address
        in: query
        description: "address of users (e.g. \"sip\" URI, \"tel\" URI, \"acr\" URI)"
        required: true
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
        x-exportParamName: AddressMandatory
      - name: latitude
        in: query
        description: Latitude geo position
        required: false
        style: form
        explode: true
        schema:
          type: number
          format: float
        x-exportParamName: Latitude
      - name: longitude
        in: query
        description: Longitude geo position
        required: false
        style: form
        explode: true
        schema:
          type: number
          format: float
        x-exportParamName: Longitude
      responses:
        "200":
          description: Successful response to a distance request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200'
        "400":
          description: "Bad Request : used to indicate that incorrect parameters were\
            \ passed to the request."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: "Unauthorized :  used when the client did not submit credentials."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "406":
          description: "Not Acceptable : used to indicate that the server cannot provide\
            \ the any of the content formats supported by the client."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "429":
          description: "Too Many Requests : used when a rate limiter has triggered."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      x-swagger-router-controller: queries
      x-openapi-router-controller: swagger_server.controllers.location_controller
  /queries/closestUser:
    get:
      tags:
      - location
      summary: Find UE closest to a location.
      description: Find the UE that is closest to another UE or a location.
      operationId: find_closest
      parameters:
      - name: address
        in: query
        description: "address of users (e.g. \"sip\" URI, \"tel\" URI, \"acr\" URI)"
        required: false
        style: form
        explode: true
        schema:
          type: string
        x-exportParamName: AddressMandatory
      - name: latitude
        in: query
        description: Latitude geo position
        required: false
        style: form
        explode: true
        schema:
          type: number
          format: float
        x-exportParamName: Latitude
      - name: longitude
        in: query
        description: Longitude geo position
        required: false
        style: form
        explode: true
        schema:
          type: number
          format: float
        x-exportParamName: Longitude
      - name: user_type
        in: query
        description: "Type of UE to search for"
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
        x-exportParamName: UserType
      responses:
        "200":
          description: Successful response to closest user request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
        "400":
          description: "Bad Request : used to indicate that incorrect parameters were\
            \ passed to the request."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: "Unauthorized :  used when the client did not submit credentials."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "406":
          description: "Not Acceptable : used to indicate that the server cannot provide\
            \ the any of the content formats supported by the client."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "429":
          description: "Too Many Requests : used when a rate limiter has triggered."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      x-swagger-router-controller: queries
      x-openapi-router-controller: swagger_server.controllers.location_controller
  /queries/closeUsers:
    get:
      tags:
      - location
      summary: Find UE closest to a location.
      description: Find the UE that is closest to another UE or a location.
      operationId: find_close
      parameters:
      - name: address
        in: query
        description: "address of users (e.g. \"sip\" URI, \"tel\" URI, \"acr\" URI)"
        required: false
        style: form
        explode: true
        schema:
          type: string
        x-exportParamName: AddressMandatory
      - name: latitude
        in: query
        description: Latitude geo position
        required: false
        style: form
        explode: true
        schema:
          type: number
          format: float
        x-exportParamName: Latitude
      - name: longitude
        in: query
        description: Longitude geo position
        required: false
        style: form
        explode: true
        schema:
          type: number
          format: float
        x-exportParamName: Longitude
      - name: distance
        in: query
        description: Maximum distance from target
        required: false
        style: form
        explode: true
        schema:
          type: number
          format: float
        x-exportParamName: Distance
      - name: user_type
        in: query
        description: "Type of UE to search for"
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
        x-exportParamName: UserType
      responses:
        "200":
          description: Successful response to closest user request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
        "400":
          description: "Bad Request : used to indicate that incorrect parameters were\
            \ passed to the request."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: "Unauthorized :  used when the client did not submit credentials."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "406":
          description: "Not Acceptable : used to indicate that the server cannot provide\
            \ the any of the content formats supported by the client."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "429":
          description: "Too Many Requests : used when a rate limiter has triggered."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      x-swagger-router-controller: queries
      x-openapi-router-controller: swagger_server.controllers.location_controller
  /queries/users:
    get:
      tags:
      - location
      summary: UE Location Lookup of a specific UE or group of UEs
      description: UE Location Lookup of a specific UE or group of UEs
      operationId: users_get
      parameters:
      - name: zoneId
        in: query
        description: Identifier of zone
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
        x-exportParamName: ZoneId
      - name: accessPointId
        in: query
        description: Identifier of access point
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
        x-exportParamName: AccessPointId
      - name: address
        in: query
        description: "address of users (e.g. \"sip\" URI, \"tel\" URI, \"acr\" URI)"
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
        x-exportParamName: Address
      responses:
        "200":
          description: Successful response to users request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_1'
        "400":
          description: "Bad Request : used to indicate that incorrect parameters were\
            \ passed to the request."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: "Unauthorized :  used when the client did not submit credentials."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "406":
          description: "Not Acceptable : used to indicate that the server cannot provide\
            \ the any of the content formats supported by the client."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "429":
          description: "Too Many Requests : used when a rate limiter has triggered."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      x-swagger-router-controller: queries
      x-openapi-router-controller: swagger_server.controllers.location_controller
  /queries/zones:
    get:
      tags:
      - location
      summary: Zones information Lookup
      description: Used to get a list of identifiers for zones authorized for use
        by the application.
      operationId: zones_get
      responses:
        "200":
          description: Successful response to zones request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_2'
        "400":
          description: "Bad Request : used to indicate that incorrect parameters were\
            \ passed to the request."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: "Unauthorized :  used when the client did not submit credentials."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "406":
          description: "Not Acceptable : used to indicate that the server cannot provide\
            \ the any of the content formats supported by the client."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "429":
          description: "Too Many Requests : used when a rate limiter has triggered."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      x-swagger-router-controller: queries
      x-openapi-router-controller: swagger_server.controllers.location_controller
  /queries/zones/{zoneId}:
    get:
      tags:
      - location
      summary: Zones information Lookup
      description: Used to get the information for an authorized zone for use by the
        application.
      operationId: zones_get_by_id
      parameters:
      - name: zoneId
        in: path
        description: Indentifier of zone
        required: true
        style: simple
        explode: false
        schema:
          type: string
        x-exportParamName: ZoneId
      responses:
        "200":
          description: Successful response to an access point Id request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_3'
        "400":
          description: "Bad Request : used to indicate that incorrect parameters were\
            \ passed to the request."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: "Unauthorized :  used when the client did not submit credentials."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "406":
          description: "Not Acceptable : used to indicate that the server cannot provide\
            \ the any of the content formats supported by the client."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "429":
          description: "Too Many Requests : used when a rate limiter has triggered."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      x-swagger-router-controller: queries
      x-openapi-router-controller: swagger_server.controllers.location_controller
  /queries/zones/{zoneId}/accessPoints:
    get:
      tags:
      - location
      summary: Radio Node Location Lookup
      description: Radio Node Location Lookup to retrieve a list of radio nodes associated
        to a zone.
      operationId: ap_get
      parameters:
      - name: zoneId
        in: path
        description: Indentifier of zone
        required: true
        style: simple
        explode: false
        schema:
          type: string
        x-exportParamName: ZoneId
      - name: interestRealm
        in: query
        description: "Interest realm of access point (e.g. geographical area, a type\
          \ of industry etc.)."
        required: false
        style: form
        explode: true
        schema:
          type: string
        x-exportParamName: InterestRealm
      responses:
        "200":
          description: Successful response to an access point Id request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_4'
        "400":
          description: "Bad Request : used to indicate that incorrect parameters were\
            \ passed to the request."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: "Unauthorized :  used when the client did not submit credentials."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "406":
          description: "Not Acceptable : used to indicate that the server cannot provide\
            \ the any of the content formats supported by the client."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "429":
          description: "Too Many Requests : used when a rate limiter has triggered."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      x-swagger-router-controller: queries
      x-openapi-router-controller: swagger_server.controllers.location_controller
  /queries/zones/{zoneId}/accessPoints/{accessPointId}:
    get:
      tags:
      - location
      summary: Radio Node Location Lookup
      description: Radio Node Location Lookup to retrieve a radio node associated
        to a zone.
      operationId: ap_by_id_get
      parameters:
      - name: zoneId
        in: path
        description: Indentifier of zone
        required: true
        style: simple
        explode: false
        schema:
          type: string
        x-exportParamName: ZoneId
      - name: accessPointId
        in: path
        description: Identifier of access Point
        required: true
        style: simple
        explode: false
        schema:
          type: string
        x-exportParamName: AccessPointId
      responses:
        "200":
          description: Successful response to an access point Id request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_5'
        "400":
          description: "Bad Request : used to indicate that incorrect parameters were\
            \ passed to the request."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: "Unauthorized :  used when the client did not submit credentials."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "406":
          description: "Not Acceptable : used to indicate that the server cannot provide\
            \ the any of the content formats supported by the client."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "429":
          description: "Too Many Requests : used when a rate limiter has triggered."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      x-swagger-router-controller: queries
      x-openapi-router-controller: swagger_server.controllers.location_controller
  /subscriptions/area/circle:
    get:
      tags:
      - location
      summary: Retrieves all active subscriptions to area change notifications
      description: This operation is used for retrieving all active subscriptions
        to area change notifications.
      operationId: area_circle_sub_list_get
      responses:
        "200":
          description: Response to retrieve area subscriptions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_6'
      x-openapi-router-controller: swagger_server.controllers.location_controller
    post:
      tags:
      - location
      summary: Creates a subscription for area change notification
      description: Creates a subscription to the Location Service for an area change
        notification.
      operationId: area_circle_sub_post
      requestBody:
        description: Subscription to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/area_circle_body'
        required: true
      responses:
        "201":
          description: Successful subscription
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/area_circle_body'
        "400":
          description: "Bad Request : used to indicate that incorrect parameters were\
            \ passed to the request."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: "Unauthorized :  used when the client did not submit credentials."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "406":
          description: "Not Acceptable : used to indicate that the server cannot provide\
            \ the any of the content formats supported by the client."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "429":
          description: "Too Many Requests : used when a rate limiter has triggered."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      callbacks:
        notification:
          '{$request.body#/circleNotificationSubscription.callbackReference.notifyURL}':
            post:
              summary: Callback POST used to send a notification
              description: "Notification from Location service, content based on subscription\
                \ type"
              operationId: circleNotificationPOST
              requestBody:
                description: Subscription notification
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        subscriptionNotification:
                          $ref: '#/components/schemas/SubscriptionNotification'
                required: true
              responses:
                "204":
                  description: No Content
      x-swagger-router-controller: subscriptions
      x-openapi-router-controller: swagger_server.controllers.location_controller
  /subscriptions/area/circle/{subscriptionId}:
    get:
      tags:
      - location
      summary: Retrieve subscription information
      description: Get subscription information.
      operationId: area_circle_sub_get
      parameters:
      - name: subscriptionId
        in: path
        description: "Subscription Identifier, specifically the \"self\" returned\
          \ in the subscription request"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uri
        x-exportParamName: SubscriptionId
      responses:
        "200":
          description: Subscription information regarding subscription notifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_7'
        "400":
          description: "Bad Request : used to indicate that incorrect parameters were\
            \ passed to the request."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: "Unauthorized :  used when the client did not submit credentials."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "406":
          description: "Not Acceptable : used to indicate that the server cannot provide\
            \ the any of the content formats supported by the client."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "429":
          description: "Too Many Requests : used when a rate limiter has triggered."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      x-swagger-router-controller: subscriptions
      x-openapi-router-controller: swagger_server.controllers.location_controller
    put:
      tags:
      - location
      summary: Updates a subscription information
      description: Updates a subscription.
      operationId: area_circle_sub_put
      parameters:
      - name: subscriptionId
        in: path
        description: "Subscription Identifier, specifically the \"self\" returned\
          \ in the subscription request"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uri
        x-exportParamName: SubscriptionId
      requestBody:
        description: Subscription to be modified
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/circle_subscriptionId_body'
        required: true
      responses:
        "200":
          description: Successful subscription to response to subscription notifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/circle_subscriptionId_body'
        "400":
          description: "Bad Request : used to indicate that incorrect parameters were\
            \ passed to the request."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: "Unauthorized :  used when the client did not submit credentials."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "406":
          description: "Not Acceptable : used to indicate that the server cannot provide\
            \ the any of the content formats supported by the client."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "412":
          description: "Precondition failed :  used when a condition has failed during\
            \ conditional requests, e.g. when using ETags to avoid write conflicts\
            \ when using PUT"
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "422":
          description: "Unprocessable Entity : used to indicate that the server understands\
            \ the content type of the request entity and that the syntax of the request\
            \ entity is correct but that the server is unable to process the contained\
            \ instructions. This error condition can occur if an JSON request body\
            \ is syntactically correct but semantically incorrect, for example if\
            \ the target area for the request is considered too large. This error\
            \ condition can also occur if the capabilities required by the request\
            \ are not supported."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "429":
          description: "Too Many Requests : used when a rate limiter has triggered."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      x-swagger-router-controller: subscriptions
      x-openapi-router-controller: swagger_server.controllers.location_controller
    delete:
      tags:
      - location
      summary: Cancel a subscription
      description: Method to delete a subscription.
      operationId: area_circle_sub_delete
      parameters:
      - name: subscriptionId
        in: path
        description: "Subscription Identifier, specifically the \"self\" returned\
          \ in the subscription request"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uri
        x-exportParamName: SubscriptionId
      responses:
        "204":
          description: No Content
        "401":
          description: "Unauthorized :  used when the client did not submit credentials."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "429":
          description: "Too Many Requests : used when a rate limiter has triggered."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      x-swagger-router-controller: subscriptions
      x-openapi-router-controller: swagger_server.controllers.location_controller
  /subscriptions/distance:
    get:
      tags:
      - location
      summary: Retrieves all active subscriptions to distance change notifications
      description: This operation is used for retrieving all active subscriptions
        to a distance change notifications.
      operationId: distance_sub_list_get
      responses:
        "200":
          description: Response to retrieve area subscriptions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_6'
      x-openapi-router-controller: swagger_server.controllers.location_controller
    post:
      tags:
      - location
      summary: Creates a subscription for distance change notification
      description: Creates a subscription to the Location Service for a distance change
        notification.
      operationId: distance_sub_post
      requestBody:
        description: Subscription to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/subscriptions_distance_body'
        required: true
      responses:
        "201":
          description: Successful subscription
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/subscriptions_distance_body'
        "400":
          description: "Bad Request : used to indicate that incorrect parameters were\
            \ passed to the request."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: "Unauthorized :  used when the client did not submit credentials."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "406":
          description: "Not Acceptable : used to indicate that the server cannot provide\
            \ the any of the content formats supported by the client."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "429":
          description: "Too Many Requests : used when a rate limiter has triggered."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      callbacks:
        notification:
          '{$request.body#/distanceNotificationSubscription.callbackReference.notifyURL}':
            post:
              summary: Callback POST used to send a notification
              description: "Notification from Location service, content based on subscription\
                \ type"
              operationId: distanceNotificationPOST
              requestBody:
                description: Subscription notification
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        subscriptionNotification:
                          $ref: '#/components/schemas/SubscriptionNotification'
                required: true
              responses:
                "204":
                  description: No Content
      x-swagger-router-controller: subscriptions
      x-openapi-router-controller: swagger_server.controllers.location_controller
  /subscriptions/distance/{subscriptionId}:
    get:
      tags:
      - location
      summary: Retrieve subscription information
      description: Get subscription information.
      operationId: distance_sub_get
      parameters:
      - name: subscriptionId
        in: path
        description: "Subscription Identifier, specifically the \"self\" returned\
          \ in the subscription request"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uri
        x-exportParamName: SubscriptionId
      responses:
        "200":
          description: Subscription information regarding subscription notifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_8'
        "400":
          description: "Bad Request : used to indicate that incorrect parameters were\
            \ passed to the request."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: "Unauthorized :  used when the client did not submit credentials."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "406":
          description: "Not Acceptable : used to indicate that the server cannot provide\
            \ the any of the content formats supported by the client."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "429":
          description: "Too Many Requests : used when a rate limiter has triggered."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      x-swagger-router-controller: subscriptions
      x-openapi-router-controller: swagger_server.controllers.location_controller
    put:
      tags:
      - location
      summary: Updates a subscription information
      description: Updates a subscription.
      operationId: distance_sub_put
      parameters:
      - name: subscriptionId
        in: path
        description: "Subscription Identifier, specifically the \"self\" returned\
          \ in the subscription request"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uri
        x-exportParamName: SubscriptionId
      requestBody:
        description: Subscription to be modified
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/distance_subscriptionId_body'
        required: true
      responses:
        "200":
          description: Successful subscription to response to subscription notifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/distance_subscriptionId_body'
        "400":
          description: "Bad Request : used to indicate that incorrect parameters were\
            \ passed to the request."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: "Unauthorized :  used when the client did not submit credentials."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "406":
          description: "Not Acceptable : used to indicate that the server cannot provide\
            \ the any of the content formats supported by the client."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "412":
          description: "Precondition failed :  used when a condition has failed during\
            \ conditional requests, e.g. when using ETags to avoid write conflicts\
            \ when using PUT"
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "422":
          description: "Unprocessable Entity : used to indicate that the server understands\
            \ the content type of the request entity and that the syntax of the request\
            \ entity is correct but that the server is unable to process the contained\
            \ instructions. This error condition can occur if an JSON request body\
            \ is syntactically correct but semantically incorrect, for example if\
            \ the target area for the request is considered too large. This error\
            \ condition can also occur if the capabilities required by the request\
            \ are not supported."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "429":
          description: "Too Many Requests : used when a rate limiter has triggered."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      x-swagger-router-controller: subscriptions
      x-openapi-router-controller: swagger_server.controllers.location_controller
    delete:
      tags:
      - location
      summary: Cancel a subscription
      description: Method to delete a subscription.
      operationId: distance_sub_delete
      parameters:
      - name: subscriptionId
        in: path
        description: "Subscription Identifier, specifically the \"self\" returned\
          \ in the subscription request"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uri
        x-exportParamName: SubscriptionId
      responses:
        "204":
          description: No Content
        "401":
          description: "Unauthorized :  used when the client did not submit credentials."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "429":
          description: "Too Many Requests : used when a rate limiter has triggered."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      x-swagger-router-controller: subscriptions
      x-openapi-router-controller: swagger_server.controllers.location_controller
  /subscriptions/periodic:
    get:
      tags:
      - location
      summary: Retrieves all active subscriptions to periodic notifications
      description: This operation is used for retrieving all active subscriptions
        to periodic notifications.
      operationId: periodic_sub_list_get
      responses:
        "200":
          description: Response to retrieve area subscriptions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_6'
      x-openapi-router-controller: swagger_server.controllers.location_controller
    post:
      tags:
      - location
      summary: Creates a subscription for periodic notification
      description: Creates a subscription to the Location Service for a periodic notification.
      operationId: periodic_sub_post
      requestBody:
        description: Subscription to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/subscriptions_periodic_body'
        required: true
      responses:
        "201":
          description: Successful subscription
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/subscriptions_periodic_body'
        "400":
          description: "Bad Request : used to indicate that incorrect parameters were\
            \ passed to the request."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: "Unauthorized :  used when the client did not submit credentials."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "406":
          description: "Not Acceptable : used to indicate that the server cannot provide\
            \ the any of the content formats supported by the client."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "429":
          description: "Too Many Requests : used when a rate limiter has triggered."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      callbacks:
        notification:
          '{$request.body#/periodicNotificationSubscription.callbackReference.notifyURL}':
            post:
              summary: Callback POST used to send a notification
              description: "Notification from Location service, content based on subscription\
                \ type"
              operationId: periodicNotificationPOST
              requestBody:
                description: Subscription notification
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        subscriptionNotification:
                          $ref: '#/components/schemas/SubscriptionNotification'
                required: true
              responses:
                "204":
                  description: No Content
      x-swagger-router-controller: subscriptions
      x-openapi-router-controller: swagger_server.controllers.location_controller
  /subscriptions/periodic/{subscriptionId}:
    get:
      tags:
      - location
      summary: Retrieve subscription information
      description: Get subscription information.
      operationId: periodic_sub_get
      parameters:
      - name: subscriptionId
        in: path
        description: "Subscription Identifier, specifically the \"self\" returned\
          \ in the subscription request"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uri
        x-exportParamName: SubscriptionId
      responses:
        "200":
          description: Subscription information regarding subscription notifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_9'
        "400":
          description: "Bad Request : used to indicate that incorrect parameters were\
            \ passed to the request."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: "Unauthorized :  used when the client did not submit credentials."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "406":
          description: "Not Acceptable : used to indicate that the server cannot provide\
            \ the any of the content formats supported by the client."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "429":
          description: "Too Many Requests : used when a rate limiter has triggered."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      x-swagger-router-controller: subscriptions
      x-openapi-router-controller: swagger_server.controllers.location_controller
    put:
      tags:
      - location
      summary: Updates a subscription information
      description: Updates a subscription.
      operationId: periodic_sub_put
      parameters:
      - name: subscriptionId
        in: path
        description: "Subscription Identifier, specifically the \"self\" returned\
          \ in the subscription request"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uri
        x-exportParamName: SubscriptionId
      requestBody:
        description: Subscription to be modified
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/periodic_subscriptionId_body'
        required: true
      responses:
        "200":
          description: Successful subscription to response to subscription notifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/periodic_subscriptionId_body'
        "400":
          description: "Bad Request : used to indicate that incorrect parameters were\
            \ passed to the request."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: "Unauthorized :  used when the client did not submit credentials."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "406":
          description: "Not Acceptable : used to indicate that the server cannot provide\
            \ the any of the content formats supported by the client."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "412":
          description: "Precondition failed :  used when a condition has failed during\
            \ conditional requests, e.g. when using ETags to avoid write conflicts\
            \ when using PUT"
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "422":
          description: "Unprocessable Entity : used to indicate that the server understands\
            \ the content type of the request entity and that the syntax of the request\
            \ entity is correct but that the server is unable to process the contained\
            \ instructions. This error condition can occur if an JSON request body\
            \ is syntactically correct but semantically incorrect, for example if\
            \ the target area for the request is considered too large. This error\
            \ condition can also occur if the capabilities required by the request\
            \ are not supported."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "429":
          description: "Too Many Requests : used when a rate limiter has triggered."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      x-swagger-router-controller: subscriptions
      x-openapi-router-controller: swagger_server.controllers.location_controller
    delete:
      tags:
      - location
      summary: Cancel a subscription
      description: Method to delete a subscription.
      operationId: periodic_sub_delete
      parameters:
      - name: subscriptionId
        in: path
        description: "Subscription Identifier, specifically the \"self\" returned\
          \ in the subscription request"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uri
        x-exportParamName: SubscriptionId
      responses:
        "204":
          description: No Content
        "401":
          description: "Unauthorized :  used when the client did not submit credentials."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "429":
          description: "Too Many Requests : used when a rate limiter has triggered."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      x-swagger-router-controller: subscriptions
      x-openapi-router-controller: swagger_server.controllers.location_controller
  /subscriptions/userTracking:
    get:
      tags:
      - location
      summary: Retrieves all active subscriptions to user tracking notifications
      description: This operation is used for retrieving all active subscriptions
        to user tracking notifications.
      operationId: user_tracking_sub_list_get
      responses:
        "200":
          description: Response to retrieve user tracking subscriptions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_6'
      x-openapi-router-controller: swagger_server.controllers.location_controller
    post:
      tags:
      - location
      summary: Creates a subscription for user tracking notification
      description: Creates a subscription to the Location Service for user tracking
        change notification.
      operationId: user_tracking_sub_post
      requestBody:
        description: Subscription to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/subscriptions_userTracking_body'
        required: true
      responses:
        "201":
          description: Successful subscription
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/subscriptions_userTracking_body'
        "400":
          description: "Bad Request : used to indicate that incorrect parameters were\
            \ passed to the request."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: "Unauthorized :  used when the client did not submit credentials."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "406":
          description: "Not Acceptable : used to indicate that the server cannot provide\
            \ the any of the content formats supported by the client."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "429":
          description: "Too Many Requests : used when a rate limiter has triggered."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      callbacks:
        notification:
          '{$request.body#/userTrackingSubscription.callbackReference.notifyURL}':
            post:
              summary: Callback POST used to send a notification
              description: "Notification from Location service, content based on subscription\
                \ type"
              operationId: userTrackingNotificationPOST
              requestBody:
                description: Subscription notification
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        zonalPresenceNotification:
                          $ref: '#/components/schemas/ZonalPresenceNotification'
                required: true
              responses:
                "204":
                  description: No Content
      x-swagger-router-controller: subscriptions
      x-openapi-router-controller: swagger_server.controllers.location_controller
  /subscriptions/userTracking/{subscriptionId}:
    get:
      tags:
      - location
      summary: Retrieve subscription information
      description: Get subscription information.
      operationId: user_tracking_sub_get
      parameters:
      - name: subscriptionId
        in: path
        description: "Subscription Identifier, specifically the \"self\" returned\
          \ in the subscription request"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uri
        x-exportParamName: SubscriptionId
      responses:
        "200":
          description: Subscription information regarding subscription notifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_10'
        "400":
          description: "Bad Request : used to indicate that incorrect parameters were\
            \ passed to the request."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: "Unauthorized :  used when the client did not submit credentials."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "406":
          description: "Not Acceptable : used to indicate that the server cannot provide\
            \ the any of the content formats supported by the client."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "429":
          description: "Too Many Requests : used when a rate limiter has triggered."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      x-swagger-router-controller: subscriptions
      x-openapi-router-controller: swagger_server.controllers.location_controller
    put:
      tags:
      - location
      summary: Updates a subscription information
      description: Updates a subscription.
      operationId: user_tracking_sub_put
      parameters:
      - name: subscriptionId
        in: path
        description: "Subscription Identifier, specifically the \"self\" returned\
          \ in the subscription request"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uri
        x-exportParamName: SubscriptionId
      requestBody:
        description: Subscription to be modified
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userTracking_subscriptionId_body'
        required: true
      responses:
        "200":
          description: Successful subscription to response to subscription notifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/userTracking_subscriptionId_body'
        "400":
          description: "Bad Request : used to indicate that incorrect parameters were\
            \ passed to the request."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: "Unauthorized :  used when the client did not submit credentials."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "406":
          description: "Not Acceptable : used to indicate that the server cannot provide\
            \ the any of the content formats supported by the client."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "412":
          description: "Precondition failed :  used when a condition has failed during\
            \ conditional requests, e.g. when using ETags to avoid write conflicts\
            \ when using PUT"
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "422":
          description: "Unprocessable Entity : used to indicate that the server understands\
            \ the content type of the request entity and that the syntax of the request\
            \ entity is correct but that the server is unable to process the contained\
            \ instructions. This error condition can occur if an JSON request body\
            \ is syntactically correct but semantically incorrect, for example if\
            \ the target area for the request is considered too large. This error\
            \ condition can also occur if the capabilities required by the request\
            \ are not supported."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "429":
          description: "Too Many Requests : used when a rate limiter has triggered."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      x-swagger-router-controller: subscriptions
      x-openapi-router-controller: swagger_server.controllers.location_controller
    delete:
      tags:
      - location
      summary: Cancel a subscription
      description: Method to delete a subscription.
      operationId: user_tracking_sub_delete
      parameters:
      - name: subscriptionId
        in: path
        description: "Subscription Identifier, specifically the \"self\" returned\
          \ in the subscription request"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uri
        x-exportParamName: SubscriptionId
      responses:
        "204":
          description: No Content
        "401":
          description: "Unauthorized :  used when the client did not submit credentials."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "429":
          description: "Too Many Requests : used when a rate limiter has triggered."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      x-swagger-router-controller: subscriptions
      x-openapi-router-controller: swagger_server.controllers.location_controller
  /subscriptions/zonalTraffic:
    get:
      tags:
      - location
      summary: Retrieves all active subscriptions to zonal traffic notifications
      description: This operation is used for retrieving all active subscriptions
        to zonal traffic change notifications.
      operationId: zonal_traffic_sub_list_get
      responses:
        "200":
          description: Response to retrieve zonal traffic subscriptions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_6'
      x-openapi-router-controller: swagger_server.controllers.location_controller
    post:
      tags:
      - location
      summary: Creates a subscription for zonal traffic notification
      description: Creates a subscription to the Location Service for zonal traffic
        change notification.
      operationId: zonal_traffic_sub_post
      requestBody:
        description: Subscription to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/subscriptions_zonalTraffic_body'
        required: true
      responses:
        "201":
          description: Successful subscription
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/subscriptions_zonalTraffic_body'
        "400":
          description: "Bad Request : used to indicate that incorrect parameters were\
            \ passed to the request."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: "Unauthorized :  used when the client did not submit credentials."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "406":
          description: "Not Acceptable : used to indicate that the server cannot provide\
            \ the any of the content formats supported by the client."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "429":
          description: "Too Many Requests : used when a rate limiter has triggered."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      callbacks:
        notification:
          '{$request.body#/zonalTrafficSubscription.callbackReference.notifyURL}':
            post:
              summary: Callback POST used to send a notification
              description: "Notification from Location service, content based on subscription\
                \ type"
              operationId: zonalTrafficNotificationPOST
              requestBody:
                description: Subscription notification
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        zonalPresenceNotification:
                          $ref: '#/components/schemas/ZonalPresenceNotification'
                required: true
              responses:
                "204":
                  description: No Content
      x-swagger-router-controller: subscriptions
      x-openapi-router-controller: swagger_server.controllers.location_controller
  /subscriptions/zonalTraffic/{subscriptionId}:
    get:
      tags:
      - location
      summary: Retrieve subscription information
      description: Get subscription information.
      operationId: zonal_traffic_sub_get
      parameters:
      - name: subscriptionId
        in: path
        description: "Subscription Identifier, specifically the \"self\" returned\
          \ in the subscription request"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uri
        x-exportParamName: SubscriptionId
      responses:
        "200":
          description: Subscription information regarding subscription notifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_11'
        "400":
          description: "Bad Request : used to indicate that incorrect parameters were\
            \ passed to the request."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: "Unauthorized :  used when the client did not submit credentials."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "406":
          description: "Not Acceptable : used to indicate that the server cannot provide\
            \ the any of the content formats supported by the client."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "429":
          description: "Too Many Requests : used when a rate limiter has triggered."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      x-swagger-router-controller: subscriptions
      x-openapi-router-controller: swagger_server.controllers.location_controller
    put:
      tags:
      - location
      summary: Updates a subscription information
      description: Updates a subscription.
      operationId: zonal_traffic_sub_put
      parameters:
      - name: subscriptionId
        in: path
        description: "Subscription Identifier, specifically the \"self\" returned\
          \ in the subscription request"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uri
        x-exportParamName: SubscriptionId
      requestBody:
        description: Subscription to be modified
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/zonalTraffic_subscriptionId_body'
        required: true
      responses:
        "200":
          description: Successful subscription to response to subscription notifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zonalTraffic_subscriptionId_body'
        "400":
          description: "Bad Request : used to indicate that incorrect parameters were\
            \ passed to the request."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: "Unauthorized :  used when the client did not submit credentials."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "406":
          description: "Not Acceptable : used to indicate that the server cannot provide\
            \ the any of the content formats supported by the client."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "412":
          description: "Precondition failed :  used when a condition has failed during\
            \ conditional requests, e.g. when using ETags to avoid write conflicts\
            \ when using PUT"
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "422":
          description: "Unprocessable Entity : used to indicate that the server understands\
            \ the content type of the request entity and that the syntax of the request\
            \ entity is correct but that the server is unable to process the contained\
            \ instructions. This error condition can occur if an JSON request body\
            \ is syntactically correct but semantically incorrect, for example if\
            \ the target area for the request is considered too large. This error\
            \ condition can also occur if the capabilities required by the request\
            \ are not supported."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "429":
          description: "Too Many Requests : used when a rate limiter has triggered."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      x-swagger-router-controller: subscriptions
      x-openapi-router-controller: swagger_server.controllers.location_controller
    delete:
      tags:
      - location
      summary: Cancel a subscription
      description: Method to delete a subscription.
      operationId: zonal_traffic_sub_delete
      parameters:
      - name: subscriptionId
        in: path
        description: "Subscription Identifier, specifically the \"self\" returned\
          \ in the subscription request"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uri
        x-exportParamName: SubscriptionId
      responses:
        "204":
          description: No Content
        "401":
          description: "Unauthorized :  used when the client did not submit credentials."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "429":
          description: "Too Many Requests : used when a rate limiter has triggered."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      x-swagger-router-controller: subscriptions
      x-openapi-router-controller: swagger_server.controllers.location_controller
  /subscriptions/zoneStatus:
    get:
      tags:
      - location
      summary: Retrieves all active subscriptions to zone status notifications
      description: This operation is used for retrieving all active subscriptions
        to zone status change notifications.
      operationId: zone_status_sub_list_get
      responses:
        "200":
          description: Response to retrieve zone status subscriptions
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_6'
      x-openapi-router-controller: swagger_server.controllers.location_controller
    post:
      tags:
      - location
      summary: Creates a subscription for zone status notification
      description: Creates a subscription to the Location Service for zone status
        change notification.
      operationId: zone_status_sub_post
      requestBody:
        description: Subscription to be created
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/subscriptions_zoneStatus_body'
        required: true
      responses:
        "201":
          description: Successful subscription
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/subscriptions_zoneStatus_body'
        "400":
          description: "Bad Request : used to indicate that incorrect parameters were\
            \ passed to the request."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: "Unauthorized :  used when the client did not submit credentials."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "406":
          description: "Not Acceptable : used to indicate that the server cannot provide\
            \ the any of the content formats supported by the client."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "429":
          description: "Too Many Requests : used when a rate limiter has triggered."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      callbacks:
        notification:
          '{$request.body#/zoneStatusSubscription.callbackReference.notifyURL}':
            post:
              summary: Callback POST used to send a notification
              description: "Notification from Location service, content based on subscription\
                \ type"
              operationId: zoneStatusNotificationPOST
              requestBody:
                description: Subscription notification
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        zoneStatusNotification:
                          $ref: '#/components/schemas/ZoneStatusNotification'
                required: true
              responses:
                "204":
                  description: No Content
      x-swagger-router-controller: subscriptions
      x-openapi-router-controller: swagger_server.controllers.location_controller
  /subscriptions/zoneStatus/{subscriptionId}:
    get:
      tags:
      - location
      summary: Retrieve subscription information
      description: Get subscription information.
      operationId: zone_status_sub_get
      parameters:
      - name: subscriptionId
        in: path
        description: "Subscription Identifier, specifically the \"self\" returned\
          \ in the subscription request"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uri
        x-exportParamName: SubscriptionId
      responses:
        "200":
          description: Subscription information regarding subscription notifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inline_response_200_12'
        "400":
          description: "Bad Request : used to indicate that incorrect parameters were\
            \ passed to the request."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: "Unauthorized :  used when the client did not submit credentials."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "406":
          description: "Not Acceptable : used to indicate that the server cannot provide\
            \ the any of the content formats supported by the client."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "429":
          description: "Too Many Requests : used when a rate limiter has triggered."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      x-swagger-router-controller: subscriptions
      x-openapi-router-controller: swagger_server.controllers.location_controller
    put:
      tags:
      - location
      summary: Updates a subscription information
      description: Updates a subscription.
      operationId: zone_status_sub_put
      parameters:
      - name: subscriptionId
        in: path
        description: "Subscription Identifier, specifically the \"self\" returned\
          \ in the subscription request"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uri
        x-exportParamName: SubscriptionId
      requestBody:
        description: Subscription to be modified
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/zoneStatus_subscriptionId_body'
        required: true
      responses:
        "200":
          description: Successful subscription to response to subscription notifications
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/zoneStatus_subscriptionId_body'
        "400":
          description: "Bad Request : used to indicate that incorrect parameters were\
            \ passed to the request."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "401":
          description: "Unauthorized :  used when the client did not submit credentials."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "406":
          description: "Not Acceptable : used to indicate that the server cannot provide\
            \ the any of the content formats supported by the client."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "412":
          description: "Precondition failed :  used when a condition has failed during\
            \ conditional requests, e.g. when using ETags to avoid write conflicts\
            \ when using PUT"
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "422":
          description: "Unprocessable Entity : used to indicate that the server understands\
            \ the content type of the request entity and that the syntax of the request\
            \ entity is correct but that the server is unable to process the contained\
            \ instructions. This error condition can occur if an JSON request body\
            \ is syntactically correct but semantically incorrect, for example if\
            \ the target area for the request is considered too large. This error\
            \ condition can also occur if the capabilities required by the request\
            \ are not supported."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "429":
          description: "Too Many Requests : used when a rate limiter has triggered."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      x-swagger-router-controller: subscriptions
      x-openapi-router-controller: swagger_server.controllers.location_controller
    delete:
      tags:
      - location
      summary: Cancel a subscription
      description: Method to delete a subscription.
      operationId: zone_status_sub_delete
      parameters:
      - name: subscriptionId
        in: path
        description: "Subscription Identifier, specifically the \"self\" returned\
          \ in the subscription request"
        required: true
        style: simple
        explode: false
        schema:
          type: string
          format: uri
        x-exportParamName: SubscriptionId
      responses:
        "204":
          description: No Content
        "401":
          description: "Unauthorized :  used when the client did not submit credentials."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: "Forbidden :  operation is not allowed given the current status\
            \ of the resource."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: "Not Found :  used when a client provided a URI that cannot\
            \ be mapped to a valid resource URI."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "429":
          description: "Too Many Requests : used when a rate limiter has triggered."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      x-swagger-router-controller: subscriptions
      x-openapi-router-controller: swagger_server.controllers.location_controller
  /applications/{appInstanceId}/subscriptions:
    get:
      tags:
      - appSubscriptions
      summary: Get subscriptions
      description: "The GET method may be used to request information about all subscriptions\
        \ for this requestor. Upon success, the response contains entity body with\
        \ all the subscriptions for the requestor."
      operationId: applications_subscriptions_get
      parameters:
      - name: appInstanceId
        in: path
        description: Represents a MEC application instance. Note that the appInstanceId
          is allocated by the MEC platform manager.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: "Upon success, a response body containing the list of links\
            \ to the requested subscriptions is returned."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MecServiceMgmtApiSubscriptionLinkList'
        "400":
          description: Bad Request. It is used to indicate that incorrect parameters
            were passed to the request.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/plain:
              schema:
                type: object
                description: Empty schema
        "403":
          description: Forbidden. The operation is not allowed given the current status
            of the resource.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: Not Found. It is used when a client provided a URI that cannot
            be mapped  to a valid resource URI.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/plain:
              schema:
                type: object
                description: Empty schema
      deprecated: false
      x-openapi-router-controller: swagger_server.controllers.app_subscriptions_controller
    post:
      tags:
      - appSubscriptions
      summary: Create subscription
      description: "The POST method may be used to create a new subscription. One\
        \ example use case is to create a new subscription to the MEC service availability\
        \ notifications. Upon success, the response contains entity body describing\
        \ the created subscription."
      operationId: applications_subscriptions_post
      parameters:
      - name: appInstanceId
        in: path
        description: Represents a MEC application instance. Note that the appInstanceId
          is allocated by the MEC platform manager.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Entity body in the request contains a subscription to the MEC
          application termination notifications that is to be created.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SerAvailabilityNotificationSubscription'
        required: true
      responses:
        "201":
          description: Entity body in the request contains a subscription to the MEC
            service availability notifications that is to be created.
          # headers:
          #   location:
          #     description: The resource URI of the created resource
          #     style: simple
          #     explode: false
          #     content:
          #       text/plain:
          #         schema:
          #           type: string
          #           description: The resource URI of the created resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SerAvailabilityNotificationSubscription'
        "400":
          description: Bad Request. It is used to indicate that incorrect parameters
            were passed to the request.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/plain:
              schema:
                type: object
                description: Empty schema
        "403":
          description: Forbidden. The operation is not allowed given the current status
            of the resource.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: Not Found. It is used when a client provided a URI that cannot
            be mapped  to a valid resource URI.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/plain:
              schema:
                type: object
                description: Empty schema
      callbacks:
        ServiceAvailailityNotification:
          '{$request.body#/callbackReference}':
            post:
              tags:
              - callbacks
              summary: Create callback
              description: |-
                'Represents the service availability information that  is used in the following cases
                 when the MEC platform announces the newly available
                services to the authorized relevant MEC applications (e.g.  the applications that indicate the services as "optional"  or "required") that are subscribed to the corresponding  service availability notifications when the MEC platform notifies the authorized relevant  applications that are subscribed to the corresponding  service availability notifications about the service availability changes.'
              operationId: ServiceAvailabilityNotification_POST
              requestBody:
                $ref: '#/components/requestBodies/ServiceAvailabilityNotification'
              responses:
                "200":
                  description: "Expected responses from callback consumer, if it accepts\
                    \ the callback"
      deprecated: false
      x-openapi-router-controller: swagger_server.controllers.app_subscriptions_controller
  /applications/{appInstanceId}/subscriptions/{subscriptionId}:
    get:
      tags:
      - appSubscriptions
      summary: Get subscription
      description: "The GET method requests information about a subscription for this\
        \ requestor. Upon success, the response contains entity body with the subscription\
        \ for the requestor."
      operationId: applications_subscription_get
      parameters:
      - name: appInstanceId
        in: path
        description: Represents a MEC application instance. Note that the appInstanceId
          is allocated by the MEC platform manager.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: subscriptionId
        in: path
        description: Represents a subscription to the notifications from the MEC platform.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: "Upon success, a response body containing the requested subscription\
            \ is returned."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SerAvailabilityNotificationSubscription'
        "400":
          description: Bad Request. It is used to indicate that incorrect parameters
            were passed to the request.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/plain:
              schema:
                type: object
                description: Empty schema
        "403":
          description: Forbidden. The operation is not allowed given the current status
            of the resource.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: Not Found. It is used when a client provided a URI that cannot
            be mapped  to a valid resource URI.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/plain:
              schema:
                type: object
                description: Empty schema
      deprecated: false
      x-openapi-router-controller: swagger_server.controllers.app_subscriptions_controller
    delete:
      tags:
      - appSubscriptions
      summary: delete subscription
      description: This method deletes a mecSrvMgmtSubscription. This method is typically
        used in "Unsubscribing from service availability event notifications" procedure.
      operationId: applications_subscription_delete
      parameters:
      - name: appInstanceId
        in: path
        description: Represents a MEC application instance. Note that the appInstanceId
          is allocated by the MEC platform manager.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: subscriptionId
        in: path
        description: Represents a subscription to the notifications from the MEC platform.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: No Content
          content: {}
        "403":
          description: Forbidden. The operation is not allowed given the current status
            of the resource.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: Not Found. It is used when a client provided a URI that cannot
            be mapped  to a valid resource URI.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/plain:
              schema:
                type: object
                description: Empty schema
      deprecated: false
      x-openapi-router-controller: swagger_server.controllers.app_subscriptions_controller
  /applications/{appInstanceId}/services:
    get:
      tags:
      - appServices
      summary: get services
      description: This method retrieves information about a list of mecService resources.
        This method is typically used in "service availability query" procedure
      operationId: app_services_get
      parameters:
      - name: appInstanceId
        in: path
        description: Represents a MEC application instance. Note that the appInstanceId
          is allocated by the MEC platform manager.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: ser_instance_id
        in: query
        description: A MEC application instance may use multiple ser_instance_ids
          as an input parameter to query the availability of a list of MEC service
          instances. Either "ser_instance_id" or "ser_name" or "ser_category_id" or
          none of them shall be present.
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: ser_name
        in: query
        description: A MEC application instance may use multiple ser_names as an input
          parameter to query the availability of a list of MEC service instances.
          Either "ser_instance_id" or "ser_name" or "ser_category_id" or none of them
          shall be present.
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: ser_category_id
        in: query
        description: A MEC application instance may use ser_category_id as an input
          parameter to query the availability of a list of MEC service instances in
          a serCategory. Either "ser_instance_id" or "ser_name" or "ser_category_id"
          or none of them shall be present.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: consumed_local_only
        in: query
        description: Indicate whether the service can only be consumed by the MEC  applications
          located in the same locality (as defined by  scopeOfLocality) as this service
          instance.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: is_local
        in: query
        description: Indicate whether the service is located in the same locality
          (as  defined by scopeOfLocality) as the consuming MEC application.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: scope_of_locality
        in: query
        description: A MEC application instance may use scope_of_locality as an input  parameter
          to query the availability of a list of MEC service instances  with a certain
          scope of locality.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: It is used to indicate nonspecific success. The response body
            contains a representation of the resource.
          content:
            application/json:
              schema:
                type: array
                description: ""
                items:
                  $ref: '#/components/schemas/ServiceInfo'
                x-content-type: application/json
              examples:
                ServiceInfoList:
                  value:
                  - serInstanceId: ServiceInstance123
                    serName: ExampleService
                    serCategory:
                      href: catItem1
                      id: id12345
                      name: RNI
                      version: version1
                    version: ServiceVersion1
                    state: ACTIVE
                    transportInfo:
                      id: TransId12345
                      name: REST
                      description: REST API
                      type: REST_HTTP
                      protocol: HTTP
                      version: "2.0"
                      endpoint:
                        addresses:
                        - host: 192.0.2.0
                          port: 8080
                      security:
                        oAuth2Info:
                          grantTypes:
                          - OAUTH2_CLIENT_CREDENTIALS
                          tokenEndpoint: /mecSerMgmtApi/security/TokenEndPoint
                    serializer: JSON
        "400":
          description: Bad Request. It is used to indicate that incorrect parameters
            were passed to the request.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/plain:
              schema:
                type: object
                description: Empty schema
        "403":
          description: Forbidden. The operation is not allowed given the current status
            of the resource.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: Not Found. It is used when a client provided a URI that cannot
            be mapped  to a valid resource URI.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/plain:
              schema:
                type: object
                description: Empty schema
        "414":
          description: It is used to indicate that the server is refusing to process
            the request because the request URI is longer than the server is willing
            or able to process.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/plain:
              schema:
                type: object
                description: Empty schema
      deprecated: false
      x-openapi-router-controller: swagger_server.controllers.app_services_controller
    post:
      tags:
      - appServices
      summary: create service
      description: This method is used to create a mecService resource. This method
        is typically used in "service availability update and new service swagger_server"
        procedure
      operationId: app_services_post
      parameters:
      - name: appInstanceId
        in: path
        description: Represents a MEC application instance. Note that the appInstanceId
          is allocated by the MEC platform manager.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: New ServiceInfo with updated "state" is included as entity body
          of the request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/appInstanceId_services_body'
        required: true
      responses:
        "201":
          description: "Upon success, the HTTP response shall include a Location HTTP\
            \ header that contains the resource URI of the created resource."
          # headers:
          #   location:
          #     description: The resource URI of the created resource
          #     style: simple
          #     explode: false
          #     content:
          #       text/plain:
          #         schema:
          #           type: string
          #           description: The resource URI of the created resource
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceInfo'
              examples:
                ServiceInfo:
                  value:
                    serInstanceId: ServiceInstance123
                    serName: ExampleService
                    serCategory:
                      href: catItem1
                      id: id12345
                      name: RNI
                      version: version1
                    version: ServiceVersion1
                    state: ACTIVE
                    transportInfo:
                      id: TransId12345
                      name: REST
                      description: REST API
                      type: REST_HTTP
                      protocol: HTTP
                      version: "2.0"
                      endpoint:
                        uris:
                        - /mecSerMgmtApi/service/EntryPoint
                      security:
                        oAuth2Info:
                          grantTypes:
                          - OAUTH2_CLIENT_CREDENTIALS
                          tokenEndpoint: /mecSerMgmtApi/security/TokenEndPoint
                    serializer: JSON
        "400":
          description: Bad Request. It is used to indicate that incorrect parameters
            were passed to the request.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/plain:
              schema:
                type: object
                description: Empty schema
        "403":
          description: Forbidden. The operation is not allowed given the current status
            of the resource.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: Not Found. It is used when a client provided a URI that cannot
            be mapped  to a valid resource URI.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/plain:
              schema:
                type: object
                description: Empty schema
      deprecated: false
      x-openapi-router-controller: swagger_server.controllers.app_services_controller
  /applications/{appInstanceId}/services/{serviceId}:
    get:
      tags:
      - appServices
      summary: get service
      description: This method retrieves information about a mecService resource.
        This method is typically used in "service availability query" procedure
      operationId: app_services_service_id_get
      parameters:
      - name: appInstanceId
        in: path
        description: Represents a MEC application instance. Note that the appInstanceId
          is allocated by the MEC platform manager.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceId
        in: path
        description: Represents a MEC service instance.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: It is used to indicate nonspecific success. The response body
            contains a representation of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceInfo'
              examples:
                ServiceInfo:
                  value:
                    serInstanceId: ServiceInstance123
                    serName: ExampleService
                    serCategory:
                      href: catItem1
                      id: id12345
                      name: RNI
                      version: version1
                    version: ServiceVersion1
                    state: ACTIVE
                    transportInfo:
                      id: TransId12345
                      name: REST
                      description: REST API
                      type: REST_HTTP
                      protocol: HTTP
                      version: "2.0"
                      endpoint:
                        uris:
                        - /mecSerMgmtApi/service/EntryPoint
                      security:
                        oAuth2Info:
                          grantTypes:
                          - OAUTH2_CLIENT_CREDENTIALS
                          tokenEndpoint: /mecSerMgmtApi/security/TokenEndPoint
                    serializer: JSON
        "400":
          description: Bad Request. It is used to indicate that incorrect parameters
            were passed to the request.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/plain:
              schema:
                type: object
                description: Empty schema
        "403":
          description: Forbidden. The operation is not allowed given the current status
            of the resource.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: Not Found. It is used when a client provided a URI that cannot
            be mapped  to a valid resource URI.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/plain:
              schema:
                type: object
                description: Empty schema
      deprecated: false
      x-openapi-router-controller: swagger_server.controllers.app_services_controller
    put:
      tags:
      - appServices
      summary: update service
      description: This method updates the information about a mecService resource
      operationId: app_services_service_id_put
      parameters:
      - name: appInstanceId
        in: path
        description: Represents a MEC application instance. Note that the appInstanceId
          is allocated by the MEC platform manager.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceId
        in: path
        description: Represents a MEC service instance.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: New ServiceInfo with updated "state" is included as entity body
          of the request
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceInfo'
        required: true
      responses:
        "200":
          description: It is used to indicate nonspecific success. The response body
            contains a representation of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceInfo'
              examples:
                ServiceInfo:
                  value:
                    serInstanceId: ServiceInstance123
                    serName: ExampleService
                    serCategory:
                      href: catItem1
                      id: id12345
                      name: RNI
                      version: version1
                    version: ServiceVersion1
                    state: ACTIVE
                    transportInfo:
                      id: TransId12345
                      name: REST
                      description: REST API
                      type: REST_HTTP
                      protocol: HTTP
                      version: "2.0"
                      endpoint:
                        uris:
                        - /mecSerMgmtApi/service/EntryPoint
                      security:
                        oAuth2Info:
                          grantTypes:
                          - OAUTH2_CLIENT_CREDENTIALS
                          tokenEndpoint: /mecSerMgmtApi/security/TokenEndPoint
                    serializer: JSON
        "400":
          description: Bad Request. It is used to indicate that incorrect parameters
            were passed to the request.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/plain:
              schema:
                type: object
                description: Empty schema
        "403":
          description: Forbidden. The operation is not allowed given the current status
            of the resource.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: Not Found. It is used when a client provided a URI that cannot
            be mapped  to a valid resource URI.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/plain:
              schema:
                type: object
                description: Empty schema
        "412":
          description: "Precondition Failed. It is used when a condition has failed\
            \ during conditional requests,  e.g. when using ETags to avoid write conflicts."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/plain:
              schema:
                type: object
                description: Empty schema
      deprecated: false
      x-openapi-router-controller: swagger_server.controllers.app_services_controller
    delete:
      tags:
      - appServices
      summary: delete service
      description: 'This method deletes a mecService resource. This method is typically
        used in the service deswagger_server procedure. '
      operationId: app_services_service_id_delete
      parameters:
      - name: appInstanceId
        in: path
        description: Represents a MEC application instance. Note that the appInstanceId
          is allocated by the MEC platform manager.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      - name: serviceId
        in: path
        description: Represents a MEC service instance.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "204":
          description: No Content
          content: {}
        "403":
          description: Forbidden. The operation is not allowed given the current status
            of the resource.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: Not Found. It is used when a client provided a URI that cannot
            be mapped  to a valid resource URI.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/plain:
              schema:
                type: object
                description: Empty schema
      deprecated: false
      x-openapi-router-controller: swagger_server.controllers.app_services_controller
  /services:
    get:
      tags:
      - services
      summary: get services
      description: This method retrieves information about a list of mecService resources.
        This method is typically used in "service availability query" procedure
      operationId: services_get
      parameters:
      - name: ser_instance_id
        in: query
        description: A MEC application instance may use multiple ser_instance_ids
          as an input parameter to query the availability of a list of MEC service
          instances. Either "ser_instance_id" or "ser_name" or "ser_category_id" or
          none of them shall be present.
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: ser_name
        in: query
        description: A MEC application instance may use multiple ser_names as an input
          parameter to query the availability of a list of MEC service instances.
          Either "ser_instance_id" or "ser_name" or "ser_category_id" or none of them
          shall be present.
        required: false
        style: form
        explode: true
        schema:
          type: array
          items:
            type: string
      - name: ser_category_id
        in: query
        description: A MEC application instance may use ser_category_id as an input
          parameter to query the availability of a list of MEC service instances in
          a serCategory. Either "ser_instance_id" or "ser_name" or "ser_category_id"
          or none of them shall be present.
        required: false
        style: form
        explode: true
        schema:
          type: string
      - name: consumed_local_only
        in: query
        description: Indicate whether the service can only be consumed by the MEC  applications
          located in the same locality (as defined by  scopeOfLocality) as this service
          instance.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: is_local
        in: query
        description: Indicate whether the service is located in the same locality
          (as  defined by scopeOfLocality) as the consuming MEC application.
        required: false
        style: form
        explode: true
        schema:
          type: boolean
      - name: scope_of_locality
        in: query
        description: A MEC application instance may use scope_of_locality as an input  parameter
          to query the availability of a list of MEC service instances  with a certain
          scope of locality.
        required: false
        style: form
        explode: true
        schema:
          type: string
      responses:
        "200":
          description: It is used to indicate nonspecific success. The response body
            contains a representation of the resource.
          content:
            application/json:
              schema:
                type: array
                description: ""
                items:
                  $ref: '#/components/schemas/ServiceInfo'
                x-content-type: application/json
              examples:
                ServiceInfoList:
                  value:
                  - serInstanceId: ServiceInstance123
                    serName: ExampleService
                    serCategory:
                      href: catItem1
                      id: id12345
                      name: RNI
                      version: version1
                    version: ServiceVersion1
                    state: ACTIVE
                    transportInfo:
                      id: TransId12345
                      name: REST
                      description: REST API
                      type: REST_HTTP
                      protocol: HTTP
                      version: "2.0"
                      endpoint:
                        addresses:
                        - host: 192.0.2.0
                          port: 8080
                      security:
                        oAuth2Info:
                          grantTypes:
                          - OAUTH2_CLIENT_CREDENTIALS
                          tokenEndpoint: /mecSerMgmtApi/security/TokenEndPoint
                    serializer: JSON
        "400":
          description: Bad Request. It is used to indicate that incorrect parameters
            were passed to the request.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/plain:
              schema:
                type: object
                description: Empty schema
        "403":
          description: Forbidden. The operation is not allowed given the current status
            of the resource.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: Not Found. It is used when a client provided a URI that cannot
            be mapped  to a valid resource URI.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/plain:
              schema:
                type: object
                description: Empty schema
        "414":
          description: It is used to indicate that the server is refusing to process
            the request because the request URI is longer than the server is willing
            or able to process.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/plain:
              schema:
                type: object
                description: Empty schema
      deprecated: false
      x-openapi-router-controller: swagger_server.controllers.services_controller
  /services/{serviceId}:
    get:
      tags:
      - services
      summary: get service
      description: This method retrieves information about a mecService resource.
        This method is typically used in "service availability query" procedure
      operationId: services_service_id_get
      parameters:
      - name: serviceId
        in: path
        description: Represents a MEC service instance.
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: It is used to indicate nonspecific success. The response body
            contains a representation of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceInfo'
              examples:
                ServiceInfo:
                  value:
                    serInstanceId: ServiceInstance123
                    serName: ExampleService
                    serCategory:
                      href: catItem1
                      id: id12345
                      name: RNI
                      version: version1
                    version: ServiceVersion1
                    state: ACTIVE
                    transportInfo:
                      id: TransId12345
                      name: REST
                      description: REST API
                      type: REST_HTTP
                      protocol: HTTP
                      version: "2.0"
                      endpoint:
                        uris:
                        - /mecSerMgmtApi/service/EntryPoint
                      security:
                        oAuth2Info:
                          grantTypes:
                          - OAUTH2_CLIENT_CREDENTIALS
                          tokenEndpoint: /mecSerMgmtApi/security/TokenEndPoint
                    serializer: JSON
        "400":
          description: Bad Request. It is used to indicate that incorrect parameters
            were passed to the request.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/plain:
              schema:
                type: object
                description: Empty schema
        "403":
          description: Forbidden. The operation is not allowed given the current status
            of the resource.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: Not Found. It is used when a client provided a URI that cannot
            be mapped  to a valid resource URI.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/plain:
              schema:
                type: object
                description: Empty schema
      deprecated: false
      x-openapi-router-controller: swagger_server.controllers.services_controller
  /transports:
    get:
      tags:
      - transports
      summary: Get transports
      description: This method retrieves information about a list of available transports.
        This method is typically used by a service-producing application to discover
        transports provided by the MEC platform in the "transport information query"
        procedure
      operationId: transports_get
      parameters: []
      responses:
        "200":
          description: It is used to indicate nonspecific success. The response body
            contains a representation of the resource.
          content:
            application/json:
              schema:
                type: array
                description: ""
                items:
                  $ref: '#/components/schemas/TransportInfo'
                x-content-type: application/json
        "400":
          description: Bad Request. It is used to indicate that incorrect parameters
            were passed to the request.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/plain:
              schema:
                type: object
                description: Empty schema
        "403":
          description: Forbidden. The operation is not allowed given the current status
            of the resource.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: Not Found. It is used when a client provided a URI that cannot
            be mapped  to a valid resource URI.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
            text/plain:
              schema:
                type: object
                description: Empty schema
      deprecated: false
      x-openapi-router-controller: swagger_server.controllers.transports_controller
  /resource_uri_allocated_by_MEC_platform:
    get:
      tags:
      - individualMECservice
      summary: get mecServiceLiveness
      description: This method retrieves information about an "Individual mecServiceLiveness"
        resource
      operationId: get_individual_mec_service
      responses:
        "200":
          description: It is used to indicate nonspecific success. The response body
            contains a representation of the resource.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceLivenessInfo'
        "400":
          description: "It is used to indicate that incorrect parameters were passed\
            \ to the request. In the returned ProblemDetails structure, the \"detail\"\
            \ attribute should convey more information about the error."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: The operation is not allowed given the current status of the
            resource. More information shall be provided in the "detail" attribute
            of the "ProblemDetails" structure.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: "It is used when a client provided a URI that cannot be mapped\
            \ to a valid resource URI. In the returned ProblemDetails structure, the\
            \ \"detail\" attribute should convey more information about the error."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      x-openapi-router-controller: swagger_server.controllers.individual_me_cservice_controller
    patch:
      tags:
      - individualMECservice
      summary: Update mecServiceLiveness
      description: This method updates a resource on top of the existing resource
        state with partial changes described by the client.
      operationId: patch_individual_mec_service
      requestBody:
        description: It contains an update of the liveness state.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceLivenessUpdate'
        required: true
      responses:
        "200":
          description: "Upon success, a response body is returned containing the updated\
            \ liveness interval value of the service Instance."
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceLivenessInfo'
        "204":
          description: Successful response sent when there is no need to provide a
            new liveness interval value to the service Instance.
          content: {}
        "400":
          description: "It is used to indicate that incorrect parameters were passed\
            \ to the request. In the returned ProblemDetails structure, the \"detail\"\
            \ attribute should convey more information about the error."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "403":
          description: The operation is not allowed given the current status of the
            resource. More information shall be provided in the "detail" attribute
            of the "ProblemDetails" structure.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "404":
          description: "It is used when a client provided a URI that cannot be mapped\
            \ to a valid resource URI. In the returned ProblemDetails structure, the\
            \ \"detail\" attribute should convey more information about the error."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "409":
          description: The operation is not allowed due to a conflict with the state
            of the resource. The MEC platform shall respond with this code if the
            service instance is in "INACTIVE" state. More information shall be provided
            in the "detail" attribute of the "ProblemDetails" structure.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
        "412":
          description: "It is used when a condition has failed during conditional\
            \ requests, e.g. when using ETags to avoid write conflicts. In the returned\
            \ ProblemDetails structure, the \"detail\" attribute should convey more\
            \ information about the error."
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetails'
      x-openapi-router-controller: swagger_server.controllers.individual_me_cservice_controller

components:
  schemas:
    AccessPointInfo:
      required:
      - accessPointId
      - connectionType
      - numberOfUsers
      - operationStatus
      - resourceURL
      type: object
      properties:
        accessPointId:
          type: string
          description: Identifier of access point.
          x-etsi-mec-cardinality: 1
          x-etsi-mec-origin-type: string
        connectionType:
          $ref: '#/components/schemas/ConnectionType'
        interestRealm:
          type: string
          description: Interest realm of access point.
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: string
        locationInfo:
          $ref: '#/components/schemas/LocationInfo'
        numberOfUsers:
          type: integer
          description: Number of users currently on the access point.
          x-etsi-mec-cardinality: 1
          x-etsi-mec-origin-type: integer
        operationStatus:
          $ref: '#/components/schemas/OperationStatus'
        resourceURL:
          type: string
          description: Self referring URL
          x-etsi-mec-cardinality: 1
          x-etsi-mec-origin-type: anyURI
        timezone:
          type: string
          description: Time zone of access point.
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: dateTimeStamp
      description: A type containing access point information.
      example:
        locationInfo:
          altitude: 5.962134
          orientationMajorAxis: 4
          shape: 7
          confidence: 5
          latitude:
          - 9.301444
          - 9.301444
          offsetAngle: 2
          accuracy: 0
          includedAngle: 2
          velocity:
            verticalUncertainty: 4
            horizontalSpeed: 1
            bearing: 1
            uncertainty: 6
            verticalSpeed: 1
            velocityType: 7
          accuracySemiMinor: 1
          innerRadius: 7
          accuracyAltitude: 6
          uncertaintyRadius: 1
          longitude:
          - 3.6160767
          - 3.6160767
          timestamp:
            seconds: 5
            nanoSeconds: 1
        operationStatus: Serviceable
        resourceURL: resourceURL
        numberOfUsers: 0
        timezone: timezone
        accessPointId: accessPointId
        interestRealm: interestRealm
        connectionType: Femto
    AccessPointList:
      required:
      - resourceURL
      - zoneId
      type: object
      properties:
        accessPoint:
          type: array
          description: Collection of the access point information list.
          items:
            $ref: '#/components/schemas/AccessPointInfo'
          x-etsi-mec-cardinality: 0..N
          x-etsi-mec-origin-type: AccessPointInfo
        resourceURL:
          type: string
          description: Self referring URL
          x-etsi-mec-cardinality: 1
          x-etsi-mec-origin-type: anyURI
        zoneId:
          type: string
          description: Identifier of zone
          x-etsi-mec-cardinality: 1
          x-etsi-mec-origin-type: string
      description: A type containing list of access points.
      example:
        resourceURL: resourceURL
        zoneId: zoneId
        accessPoint:
        - locationInfo:
            altitude: 5.962134
            orientationMajorAxis: 4
            shape: 7
            confidence: 5
            latitude:
            - 9.301444
            - 9.301444
            offsetAngle: 2
            accuracy: 0
            includedAngle: 2
            velocity:
              verticalUncertainty: 4
              horizontalSpeed: 1
              bearing: 1
              uncertainty: 6
              verticalSpeed: 1
              velocityType: 7
            accuracySemiMinor: 1
            innerRadius: 7
            accuracyAltitude: 6
            uncertaintyRadius: 1
            longitude:
            - 3.6160767
            - 3.6160767
            timestamp:
              seconds: 5
              nanoSeconds: 1
          operationStatus: Serviceable
          resourceURL: resourceURL
          numberOfUsers: 0
          timezone: timezone
          accessPointId: accessPointId
          interestRealm: interestRealm
          connectionType: Femto
        - locationInfo:
            altitude: 5.962134
            orientationMajorAxis: 4
            shape: 7
            confidence: 5
            latitude:
            - 9.301444
            - 9.301444
            offsetAngle: 2
            accuracy: 0
            includedAngle: 2
            velocity:
              verticalUncertainty: 4
              horizontalSpeed: 1
              bearing: 1
              uncertainty: 6
              verticalSpeed: 1
              velocityType: 7
            accuracySemiMinor: 1
            innerRadius: 7
            accuracyAltitude: 6
            uncertaintyRadius: 1
            longitude:
            - 3.6160767
            - 3.6160767
            timestamp:
              seconds: 5
              nanoSeconds: 1
          operationStatus: Serviceable
          resourceURL: resourceURL
          numberOfUsers: 0
          timezone: timezone
          accessPointId: accessPointId
          interestRealm: interestRealm
          connectionType: Femto
    CallbackReference:
      required:
      - notifyURL
      type: object
      properties:
        callbackData:
          type: string
          description: "Data the application can register with the server when subscribing\
            \ to notifications, and that are passed back unchanged in each of the\
            \ related notifications. These data can be used by the application in\
            \ the processing of the notification, e.g. for correlation purposes."
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: string
        notificationFormat:
          $ref: '#/components/schemas/NotificationFormat'
        notifyURL:
          type: string
          description: Notify Callback URL
          x-etsi-mec-cardinality: "1"
          x-etsi-mec-origin-type: anyURI
      example:
        notificationFormat: XML
        callbackData: callbackData
        notifyURL: notifyURL
    CircleNotificationSubscription:
      required:
      - address
      - callbackReference
      - checkImmediate
      - enteringLeavingCriteria
      - frequency
      - latitude
      - longitude
      - radius
      - trackingAccuracy
      type: object
      properties:
        address:
          type: array
          description: "Address of terminals to monitor (e.g. \"sip\" URI, \"tel\"\
            \ URI, \"acr\" URI)"
          items:
            type: string
          x-etsi-mec-cardinality: 1..N
          x-etsi-mec-origin-type: anyURI
        callbackReference:
          $ref: '#/components/schemas/CallbackReference'
        checkImmediate:
          type: boolean
          description: Check location immediately after establishing notification.
          x-etsi-mec-cardinality: 1
          x-etsi-mec-origin-type: boolean
        clientCorrelator:
          type: string
          description: A correlator that the client can use to tag this particular
            resource representation during a request to create a resource on the server.
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: string
        count:
          type: integer
          description: "Maximum number of notifications per individual address. For\
            \ no maximum, either do not include this element or specify a value of\
            \ zero. Default value is 0."
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: int
        duration:
          type: integer
          description: "Period of time (in seconds) notifications are provided for.\
            \ If set to “0” (zero), a default duration time, which is specified by\
            \ the service policy, will be used. If the parameter is omitted, the notifications\
            \ will continue until the maximum duration time, which is specified by\
            \ the service policy, unless the notifications are stopped by deletion\
            \ of subscription for notifications."
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: int
        enteringLeavingCriteria:
          $ref: '#/components/schemas/EnteringLeavingCriteria'
        frequency:
          type: integer
          description: Maximum frequency (in seconds) of notifications per subscription
            (can also be considered minimum time between notifications).
          x-etsi-mec-cardinality: 1
          x-etsi-mec-origin-type: int
        latitude:
          type: number
          description: Latitude of center point.
          format: float
          x-etsi-mec-cardinality: 1
          x-etsi-mec-origin-type: float
        link:
          type: array
          description: Link to other resources that are in relationship with the resource.
          items:
            $ref: '#/components/schemas/Link'
          x-etsi-mec-cardinality: 0..N
          x-etsi-mec-origin-type: Link
        longitude:
          type: number
          description: Longitude of center point.
          format: float
          x-etsi-mec-cardinality: 1
          x-etsi-mec-origin-type: float
        radius:
          type: number
          description: Radius circle around center point in meters.
          format: float
          x-etsi-mec-cardinality: 1
          x-etsi-mec-origin-type: float
        requester:
          type: string
          description: "Identifies the entity that is requesting the information (e.g.\
            \ \"sip\" URI, \"tel\" URI, \"acr\" URI)"
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: anyURI
        resourceURL:
          type: string
          description: Self referring URL
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: anyURI
        trackingAccuracy:
          type: number
          description: Number of meters of acceptable error in tracking distance.
          format: float
          x-etsi-mec-cardinality: 1
          x-etsi-mec-origin-type: float
      description: "A type containing data for notifications, when the area is defined\
        \ as a circle."
      example:
        requester: requester
        trackingAccuracy: 7.0614014
        address:
        - address
        - address
        callbackReference:
          notificationFormat: XML
          callbackData: callbackData
          notifyURL: notifyURL
        latitude: 5.962134
        count: 0
        link:
        - rel: rel
          href: href
        - rel: rel
          href: href
        frequency: 1
        duration: 6
        enteringLeavingCriteria: Entering
        resourceURL: resourceURL
        clientCorrelator: clientCorrelator
        checkImmediate: true
        radius: 2.302136
        longitude: 5.637377
    ConnectionType:
      type: string
      description: The connection type for the access point
      enum:
      - Femto
      - LTE-femto
      - Smallcell
      - LTE-smallcell
      - Wifi
      - Pico
      - Micro
      - Macro
      - Wimax
      - Unknown
    DistanceCriteria:
      type: string
      enum:
      - AllWithinDistance
      - AnyWithinDistance
      - AllBeyondDistance
      - AnyBeyondDistance
    DistanceNotificationSubscription:
      required:
      - callbackReference
      - checkImmediate
      - criteria
      - distance
      - frequency
      - monitoredAddress
      - trackingAccuracy
      type: object
      properties:
        callbackReference:
          $ref: '#/components/schemas/CallbackReference'
        checkImmediate:
          type: boolean
          description: Check location immediately after establishing notification.
          x-etsi-mec-cardinality: 1
          x-etsi-mec-origin-type: boolean
        clientCorrelator:
          type: string
          description: A correlator that the client can use to tag this particular
            resource representation during a request to create a resource on the server.
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: string
        count:
          type: integer
          description: "Maximum number of notifications per individual address. For\
            \ no maximum, either do not include this element or specify a value of\
            \ zero. Default value is 0."
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: int
        criteria:
          $ref: '#/components/schemas/DistanceCriteria'
        distance:
          type: number
          description: Distance between devices that shall be monitored.
          format: float
          x-etsi-mec-cardinality: 1
          x-etsi-mec-origin-type: float
        duration:
          type: integer
          description: "Period of time (in seconds) notifications are provided for.\
            \ If set to “0” (zero), a default duration time, which is specified by\
            \ the service policy, will be used. If the parameter is omitted, the notifications\
            \ will continue until the maximum duration time, which is specified by\
            \ the service policy, unless the notifications are stopped by deletion\
            \ of subscription for notifications."
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: int
        frequency:
          type: integer
          description: Maximum frequency (in seconds) of notifications per subscription
            (can also be considered minimum time between notifications).
          x-etsi-mec-cardinality: 1
          x-etsi-mec-origin-type: int
        link:
          type: array
          description: Link to other resources that are in relationship with the resource.
          items:
            $ref: '#/components/schemas/Link'
          x-etsi-mec-cardinality: 0..N
          x-etsi-mec-origin-type: Link
        monitoredAddress:
          type: array
          description: "Contains addresses of devices to monitor (e.g., 'sip' URI,\
            \ 'tel' URI, 'acr' URI)"
          items:
            type: string
          x-etsi-mec-cardinality: 1..N
          x-etsi-mec-origin-type: anyURI
        referenceAddress:
          type: array
          description: "Indicates address of each device that will be used as reference\
            \ devices from which the distances towards monitored devices indicated\
            \ in the Addresses will be monitored (e.g., 'sip' URI, 'tel' URI, 'acr'\
            \ URI)"
          items:
            type: string
          x-etsi-mec-cardinality: 0..N
          x-etsi-mec-origin-type: anyURI
        requester:
          type: string
          description: "Identifies the entity that is requesting the information (e.g.\
            \ \"sip\" URI, \"tel\" URI, \"acr\" URI)"
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: anyURI
        resourceURL:
          type: string
          description: Self referring URL
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: anyURI
        trackingAccuracy:
          type: number
          description: Number of meters of acceptable error in tracking distance.
          format: float
          x-etsi-mec-cardinality: 1
          x-etsi-mec-origin-type: float
      description: "A type containing data for distance subscription, with reference\
        \ to other devices."
      example:
        requester: requester
        trackingAccuracy: 7.386282
        distance: 3.6160767
        callbackReference: null
        criteria: AllWithinDistance
        count: 9
        link:
        - null
        - null
        frequency: 4
        duration: 2
        monitoredAddress:
        - monitoredAddress
        - monitoredAddress
        referenceAddress:
        - referenceAddress
        - referenceAddress
        resourceURL: resourceURL
        clientCorrelator: clientCorrelator
        checkImmediate: true
    EnteringLeavingCriteria:
      type: string
      enum:
      - Entering
      - Leaving
    Link:
      required:
      - href
      - rel
      type: object
      properties:
        href:
          type: string
          description: URI
          format: anyURI
        rel:
          type: string
          description: Describes the relationship between the URI and the resource.
      description: Link to other resources
      example:
        rel: rel
        href: href
    LocationInfo:
      required:
      - latitude
      - longitude
      - shape
      type: object
      properties:
        accuracy:
          type: integer
          description: "Horizontal accuracy / (semi-major) uncertainty of location\
            \ provided in meters, as defined in ETSI TS 123 032 [14]. Present only\
            \ if \"shape\" equals 4, 5 or 6"
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: UnsignedInt
        accuracyAltitude:
          type: integer
          description: "Altitude accuracy / uncertainty of location provided in meters,\
            \ as defined in ETSI TS 123 032 [14]. Present only if \"shape\" equals\
            \ 3 or 4"
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: UnsignedInt
        accuracySemiMinor:
          type: integer
          description: "Horizontal accuracy / (semi-major) uncertainty of location\
            \ provided in meters, as defined in ETSI TS 123 032 [14]. Present only\
            \ if \"shape\" equals 4, 5 or 6"
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: UnsignedInt
        altitude:
          type: number
          description: Location altitude relative to the WGS84 ellipsoid surface.
          format: float
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: Float
        confidence:
          type: integer
          description: "Confidence by which the position of a target entity is known\
            \ to be within the shape description, expressed as a percentage and defined\
            \ in ETSI TS 123 032 [14]. Present only if \"shape\" equals 1, 4 or 6"
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: UnsignedInt
        includedAngle:
          type: integer
          description: Present only if "shape" equals 6
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: UnsignedInt
        innerRadius:
          type: integer
          description: Present only if "shape" equals 6
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: UnsignedInt
        latitude:
          minItems: 1
          type: array
          description: "Location latitude, expressed in the range -90° to +90°. Cardinality\
            \ greater than one only if \"shape\" equals 7."
          items:
            type: number
            format: float
          x-etsi-mec-cardinality: 1..N
          x-etsi-mec-origin-type: Float
        longitude:
          minItems: 1
          type: array
          description: "Location longitude, expressed in the range -180° to +180°\
            . Cardinality greater than one only if \"shape\" equals 7."
          items:
            type: number
            format: float
          x-etsi-mec-cardinality: 1..N
          x-etsi-mec-origin-type: Float
        offsetAngle:
          type: integer
          description: Present only if "shape" equals 6
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: UnsignedInt
        orientationMajorAxis:
          type: integer
          description: "Angle of orientation of the major axis, expressed in the range\
            \ 0° to 180°, as defined in ETSI TS 123 032 [14]. Present only if \"shape\"\
            \ equals 4 or 6"
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: UnsignedInt
        shape:
          type: integer
          description: "Shape information, as detailed in ETSI TS 123 032 [14], associated\
            \ with the reported location coordinate: <p>1 = ELLIPSOID_ARC <p>2 = ELLIPSOID_POINT\
            \ <p>3 = ELLIPSOID_POINT_ALTITUDE <p>4 = ELLIPSOID_POINT_ALTITUDE_UNCERT_ELLIPSOID\
            \ <p>5 = ELLIPSOID_POINT_UNCERT_CIRCLE <p>6 = ELLIPSOID_POINT_UNCERT_ELLIPSE\
            \ <p>7 = POLYGON"
          x-etsi-mec-cardinality: "1"
          x-etsi-mec-origin-type: Enum_inlined
        timestamp:
          $ref: '#/components/schemas/TimeStamp'
        uncertaintyRadius:
          type: integer
          description: Present only if "shape" equals 6
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: UnsignedInt
        velocity:
          $ref: '#/components/schemas/LocationInfo_velocity'
      example:
        altitude: 5.962134
        orientationMajorAxis: 4
        shape: 7
        confidence: 5
        latitude:
        - 9.301444
        - 9.301444
        offsetAngle: 2
        accuracy: 0
        includedAngle: 2
        velocity:
          verticalUncertainty: 4
          horizontalSpeed: 1
          bearing: 1
          uncertainty: 6
          verticalSpeed: 1
          velocityType: 7
        accuracySemiMinor: 1
        innerRadius: 7
        accuracyAltitude: 6
        uncertaintyRadius: 1
        longitude:
        - 3.6160767
        - 3.6160767
        timestamp:
          seconds: 5
          nanoSeconds: 1
      x-etsi-ref: 6.5.3
    NotificationFormat:
      type: string
      enum:
      - XML
      - JSON
    NotificationSubscriptionList:
      required:
      - resourceURL
      type: object
      properties:
        circleNotificationSubscription:
          minItems: 0
          type: array
          description: "Collection of CircleNotificationSubscription elements, see\
            \ note 2."
          items:
            $ref: '#/components/schemas/CircleNotificationSubscription'
          x-etsi-mec-cardinality: 0.. N
          x-etsi-mec-origin-type: CircleNotificationSubscription
        distanceNotificationSubscription:
          minItems: 0
          type: array
          description: "Collection of DistanceNotificationSubscription elements, see\
            \ note 2."
          items:
            $ref: '#/components/schemas/DistanceNotificationSubscription'
          x-etsi-mec-cardinality: 0.. N
          x-etsi-mec-origin-type: DistanceNotificationSubscription
        periodicNotificationSubscription:
          minItems: 0
          type: array
          description: "Collection of PeriodicNotificationSubscription elements, see\
            \ note 2."
          items:
            $ref: '#/components/schemas/PeriodicNotificationSubscription'
          x-etsi-mec-cardinality: 0.. N
          x-etsi-mec-origin-type: PeriodicNotificationSubscription
        resourceURL:
          type: string
          description: "Self-referring URL, see note 1."
          format: uri
          x-etsi-mec-cardinality: "1"
          x-etsi-mec-origin-type: AnyURI
        userTrackingSubscription:
          minItems: 0
          type: array
          description: "Collection of UserTrackingSubscription elements, see note\
            \ 1."
          items:
            $ref: '#/components/schemas/UserTrackingSubscription'
          x-etsi-mec-cardinality: 0.. N
          x-etsi-mec-origin-type: UserTrackingSubscription
        zonalTrafficSubscription:
          minItems: 0
          type: array
          description: "Collection of ZonalTrafficSubscription elements, see note\
            \ 1."
          items:
            $ref: '#/components/schemas/ZonalTrafficSubscription'
          x-etsi-mec-cardinality: 0.. N
          x-etsi-mec-origin-type: ZonalTrafficSubscription
        zoneStatusSubscription:
          minItems: 0
          type: array
          description: "Collection of ZoneStatusSubscription elements, see note 1."
          items:
            $ref: '#/components/schemas/ZoneStatusSubscription'
          x-etsi-mec-cardinality: 0.. N
          x-etsi-mec-origin-type: ZoneStatusSubscription
      example:
        distanceNotificationSubscription:
        - requester: requester
          trackingAccuracy: 7.386282
          distance: 3.6160767
          callbackReference: null
          criteria: AllWithinDistance
          count: 9
          link:
          - null
          - null
          frequency: 4
          duration: 2
          monitoredAddress:
          - monitoredAddress
          - monitoredAddress
          referenceAddress:
          - referenceAddress
          - referenceAddress
          resourceURL: resourceURL
          clientCorrelator: clientCorrelator
          checkImmediate: true
        - requester: requester
          trackingAccuracy: 7.386282
          distance: 3.6160767
          callbackReference: null
          criteria: AllWithinDistance
          count: 9
          link:
          - null
          - null
          frequency: 4
          duration: 2
          monitoredAddress:
          - monitoredAddress
          - monitoredAddress
          referenceAddress:
          - referenceAddress
          - referenceAddress
          resourceURL: resourceURL
          clientCorrelator: clientCorrelator
          checkImmediate: true
        circleNotificationSubscription:
        - requester: requester
          trackingAccuracy: 7.0614014
          address:
          - address
          - address
          callbackReference:
            notificationFormat: XML
            callbackData: callbackData
            notifyURL: notifyURL
          latitude: 5.962134
          count: 0
          link:
          - rel: rel
            href: href
          - rel: rel
            href: href
          frequency: 1
          duration: 6
          enteringLeavingCriteria: Entering
          resourceURL: resourceURL
          clientCorrelator: clientCorrelator
          checkImmediate: true
          radius: 2.302136
          longitude: 5.637377
        - requester: requester
          trackingAccuracy: 7.0614014
          address:
          - address
          - address
          callbackReference:
            notificationFormat: XML
            callbackData: callbackData
            notifyURL: notifyURL
          latitude: 5.962134
          count: 0
          link:
          - rel: rel
            href: href
          - rel: rel
            href: href
          frequency: 1
          duration: 6
          enteringLeavingCriteria: Entering
          resourceURL: resourceURL
          clientCorrelator: clientCorrelator
          checkImmediate: true
          radius: 2.302136
          longitude: 5.637377
        resourceURL: http://example.com/aeiou
        userTrackingSubscription:
        - address: address
          resourceURL: resourceURL
          callbackReference: null
          clientCorrelator: clientCorrelator
          userEventCriteria:
          - Entering
          - Entering
        - address: address
          resourceURL: resourceURL
          callbackReference: null
          clientCorrelator: clientCorrelator
          userEventCriteria:
          - Entering
          - Entering
        zonalTrafficSubscription:
        - duration: 6
          resourceURL: resourceURL
          callbackReference: null
          clientCorrelator: clientCorrelator
          zoneId: zoneId
          interestRealm:
          - interestRealm
          - interestRealm
          userEventCriteria:
          - null
          - null
        - duration: 6
          resourceURL: resourceURL
          callbackReference: null
          clientCorrelator: clientCorrelator
          zoneId: zoneId
          interestRealm:
          - interestRealm
          - interestRealm
          userEventCriteria:
          - null
          - null
        zoneStatusSubscription:
        - operationStatus:
          - Serviceable
          - Serviceable
          numberOfUsersAPThreshold: 7
          resourceURL: resourceURL
          callbackReference: null
          clientCorrelator: clientCorrelator
          zoneId: zoneId
          numberOfUsersZoneThreshold: 1
        - operationStatus:
          - Serviceable
          - Serviceable
          numberOfUsersAPThreshold: 7
          resourceURL: resourceURL
          callbackReference: null
          clientCorrelator: clientCorrelator
          zoneId: zoneId
          numberOfUsersZoneThreshold: 1
        periodicNotificationSubscription:
        - duration: 1
          requester: requester
          address:
          - address
          - address
          resourceURL: resourceURL
          callbackReference: null
          clientCorrelator: clientCorrelator
          link:
          - null
          - null
          frequency: 1
          requestedAccuracy: 1
        - duration: 1
          requester: requester
          address:
          - address
          - address
          resourceURL: resourceURL
          callbackReference: null
          clientCorrelator: clientCorrelator
          link:
          - null
          - null
          frequency: 1
          requestedAccuracy: 1
      x-etsi-notes: "NOTE 1:\tAs specified in [5], clause 5.2.2.8.\nNOTE 2: \tAs specified\
        \ in [6], clause 5.2.2.7."
      x-etsi-ref: 6.3.3
    OperationStatus:
      type: string
      enum:
      - Serviceable
      - Unserviceable
      - Unknown
    PeriodicNotificationSubscription:
      required:
      - address
      - callbackReference
      - frequency
      - requestedAccuracy
      type: object
      properties:
        address:
          type: array
          description: "Address of terminals to monitor (e.g. \"sip\" URI, \"tel\"\
            \ URI, \"acr\" URI)"
          items:
            type: string
          x-etsi-mec-cardinality: 1..N
          x-etsi-mec-origin-type: anyURI
        callbackReference:
          $ref: '#/components/schemas/CallbackReference'
        clientCorrelator:
          type: string
          description: A correlator that the client can use to tag this particular
            resource representation during a request to create a resource on the server.
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: string
        duration:
          type: integer
          description: "Period of time (in seconds) notifications are provided for.\
            \ If set to “0” (zero), a default duration time, which is specified by\
            \ the service policy, will be used. If the parameter is omitted, the notifications\
            \ will continue until the maximum duration time, which is specified by\
            \ the service policy, unless the notifications are stopped by deletion\
            \ of subscription for notifications."
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: int
        frequency:
          type: integer
          description: Maximum frequency (in seconds) of notifications (can also be
            considered minimum time between notifications) per subscription.
          x-etsi-mec-cardinality: 1
          x-etsi-mec-origin-type: int
        link:
          type: array
          description: Link to other resources that are in relationship with the resource.
          items:
            $ref: '#/components/schemas/Link'
          x-etsi-mec-cardinality: 0..N
          x-etsi-mec-origin-type: Link
        requestedAccuracy:
          type: integer
          description: Accuracy of the provided distance in meters.
          x-etsi-mec-cardinality: 1
          x-etsi-mec-origin-type: int
        requester:
          type: string
          description: "Identifies the entity that is requesting the information (e.g.\
            \ \"sip\" URI, \"tel\" URI, \"acr\" URI)"
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: anyURI
        resourceURL:
          type: string
          description: Self referring URL
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: anyURI
      description: A type containing data for periodic subscription.
      example:
        duration: 1
        requester: requester
        address:
        - address
        - address
        resourceURL: resourceURL
        callbackReference: null
        clientCorrelator: clientCorrelator
        link:
        - null
        - null
        frequency: 1
        requestedAccuracy: 1
    ProblemDetails:
      type: object
      properties:
        detail:
          type: string
          description: A human-readable explanation specific to this occurrence of
            the problem
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: String
        instance:
          type: string
          description: A URI reference that identifies the specific occurrence of
            the problem
          format: uri
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: URI
        status:
          type: integer
          description: The HTTP status code for this occurrence of the problem
          format: uint32
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: Uint32
        title:
          type: string
          description: "A short, human-readable summary of the problem type"
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: String
        type:
          type: string
          description: A URI reference according to IETF RFC 3986 that identifies
            the problem type
          format: uri
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: URI
    RetrievalStatus:
      type: string
      enum:
      - Retrieved
      - NotRetrieved
      - Error
    ServiceError:
      required:
      - messageId
      - text
      type: object
      properties:
        messageId:
          type: string
          description: "Message identifier, either with prefix SVC or with prefix\
            \ POL"
          x-etsi-mec-cardinality: 1
          x-etsi-mec-origin-type: string
        text:
          type: string
          description: "Message text, with replacement variables marked with %n, where\
            \ n is an index into the list of <variables> elements, starting at 1"
          x-etsi-mec-cardinality: 1
          x-etsi-mec-origin-type: string
        variables:
          type: array
          description: Variables to substitute into text string
          items:
            type: string
          x-etsi-mec-cardinality: 0..N
          x-etsi-mec-origin-type: string
      description: used to indicate a notification termination or cancellation.
    SubscriptionNotification:
      required:
      - terminalLocation
      type: object
      properties:
        callbackData:
          type: string
          description: CallbackData if passed by the application in the receiptRequest
            element during the associated subscription operation
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: string
        distanceCriteria:
          $ref: '#/components/schemas/DistanceCriteria'
        enteringLeavingCriteria:
          $ref: '#/components/schemas/EnteringLeavingCriteria'
        isFinalNotification:
          type: boolean
          description: Set to true if it is a final notification about location change.
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: boolean
        link:
          type: array
          description: Link to other resources that are in relationship with the resource.
          items:
            $ref: '#/components/schemas/Link'
          x-etsi-mec-cardinality: 0..N
          x-etsi-mec-origin-type: Link
        terminalLocation:
          type: array
          description: Collection of the terminal locations.
          items:
            $ref: '#/components/schemas/TerminalLocation'
          x-etsi-mec-cardinality: 1..N
          x-etsi-mec-origin-type: TerminalLocation
      description: A type containing the notification subscription.
    TerminalDistance:
      required:
      - distance
      type: object
      properties:
        accuracy:
          type: integer
          description: Accuracy of the provided distance in meters
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: integer
        distance:
          type: integer
          description: Distance from terminal to a location or between two terminals
            specified in meters
          x-etsi-mec-cardinality: 1
          x-etsi-mec-origin-type: integer
        timestamp:
          $ref: '#/components/schemas/TimeStamp'
      description: "A type containing information about the distance from a terminal\
        \ to a location or between two terminals, in addition the accuracy and a timestamp\
        \ of the information are provided."
      example:
        distance: 6
        accuracy: 0
        timestamp:
          seconds: 5
          nanoSeconds: 1
    TerminalLocation:
      required:
      - address
      - locationRetrievalStatus
      type: object
      properties:
        address:
          type: string
          description: "Address of the terminal to which the location information\
            \ applies (e.g., 'sip' URI, 'tel' URI, 'acr' URI)."
          x-etsi-mec-cardinality: 1
          x-etsi-mec-origin-type: anyURI
        currentLocation:
          $ref: '#/components/schemas/LocationInfo'
        errorInformation:
          $ref: '#/components/schemas/ServiceError'
        locationRetrievalStatus:
          $ref: '#/components/schemas/RetrievalStatus'
      description: "A type containing device address, retrieval status and location\
        \ information."
    TimeStamp:
      required:
      - nanoSeconds
      - seconds
      type: object
      properties:
        nanoSeconds:
          type: integer
          description: "The nanoseconds part of the time. Time is defined as Unix-time\
            \ since January 1, 1970, 00:00:00 UTC."
          format: uint32
          x-etsi-mec-cardinality: "1"
          x-etsi-mec-origin-type: Uint32
        seconds:
          type: integer
          description: "The seconds part of the time. Time is defined as Unix-time\
            \ since January 1, 1970, 00:00:00 UTC."
          format: uint32
          x-etsi-mec-cardinality: "1"
          x-etsi-mec-origin-type: Uint32
      example:
        seconds: 5
        nanoSeconds: 1
      x-etsi-ref: 6.5.2
    UserEventType:
      type: string
      enum:
      - Entering
      - Leaving
      - Transferring
    UserInfo:
      required:
      - accessPointId
      - address
      - resourceURL
      - timestamp
      - zoneId
      type: object
      properties:
        accessPointId:
          type: string
          description: "The identity of the access point the user is currently on,\
            \ see note 1."
          x-etsi-mec-cardinality: "1"
          x-etsi-mec-origin-type: String
        address:
          type: string
          description: "Address of user (e.g. 'sip' URI, 'tel' URI, 'acr' URI) currently\
            \ on the access point, see note 1."
          format: uri
          x-etsi-mec-cardinality: "1"
          x-etsi-mec-origin-type: AnyURI
        ancillaryInfo:
          type: string
          description: Reserved for future use.
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: String
        contextLocationInfo:
          type: string
          description: "Contextual information of a user location (e.g. aisle, floor,\
            \ room number, etc.)."
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: String
        locationInfo:
          $ref: '#/components/schemas/LocationInfo'
        resourceURL:
          type: string
          description: "Self-referring URL, see note 1."
          x-etsi-mec-cardinality: "1"
          x-etsi-mec-origin-type: AnyURI
        timestamp:
          $ref: '#/components/schemas/TimeStamp'
        zoneId:
          type: string
          description: "The identity of the zone the user is currently within, see\
            \ note 1."
          x-etsi-mec-cardinality: "1"
          x-etsi-mec-origin-type: String
      example:
        locationInfo:
          altitude: 5.962134
          orientationMajorAxis: 4
          shape: 7
          confidence: 5
          latitude:
          - 9.301444
          - 9.301444
          offsetAngle: 2
          accuracy: 0
          includedAngle: 2
          velocity:
            verticalUncertainty: 4
            horizontalSpeed: 1
            bearing: 1
            uncertainty: 6
            verticalSpeed: 1
            velocityType: 7
          accuracySemiMinor: 1
          innerRadius: 7
          accuracyAltitude: 6
          uncertaintyRadius: 1
          longitude:
          - 3.6160767
          - 3.6160767
          timestamp:
            seconds: 5
            nanoSeconds: 1
        address: http://example.com/aeiou
        resourceURL: resourceURL
        accessPointId: accessPointId
        zoneId: zoneId
        ancillaryInfo: ancillaryInfo
        contextLocationInfo: contextLocationInfo
        timestamp: null
      x-etsi-notes: "NOTE 1:\tAs specified in [5], clause 5.2.2.7.\nNOTE 2: \tAs specified\
        \ in [5], clause 5.2.2.5."
      x-etsi-ref: 6.2.2
    UserList:
      required:
      - resourceURL
      type: object
      properties:
        resourceURL:
          type: string
          description: Self referring URL
          x-etsi-mec-cardinality: 1
          x-etsi-mec-origin-type: anyURI
        user:
          type: array
          description: Collection of the zone information list.
          items:
            $ref: '#/components/schemas/UserInfo'
          x-etsi-mec-cardinality: 0..N
          x-etsi-mec-origin-type: UserInfo
      description: A type containing list of users.
      example:
        resourceURL: resourceURL
        user:
        - locationInfo:
            altitude: 5.962134
            orientationMajorAxis: 4
            shape: 7
            confidence: 5
            latitude:
            - 9.301444
            - 9.301444
            offsetAngle: 2
            accuracy: 0
            includedAngle: 2
            velocity:
              verticalUncertainty: 4
              horizontalSpeed: 1
              bearing: 1
              uncertainty: 6
              verticalSpeed: 1
              velocityType: 7
            accuracySemiMinor: 1
            innerRadius: 7
            accuracyAltitude: 6
            uncertaintyRadius: 1
            longitude:
            - 3.6160767
            - 3.6160767
            timestamp:
              seconds: 5
              nanoSeconds: 1
          address: http://example.com/aeiou
          resourceURL: resourceURL
          accessPointId: accessPointId
          zoneId: zoneId
          ancillaryInfo: ancillaryInfo
          contextLocationInfo: contextLocationInfo
          timestamp: null
        - locationInfo:
            altitude: 5.962134
            orientationMajorAxis: 4
            shape: 7
            confidence: 5
            latitude:
            - 9.301444
            - 9.301444
            offsetAngle: 2
            accuracy: 0
            includedAngle: 2
            velocity:
              verticalUncertainty: 4
              horizontalSpeed: 1
              bearing: 1
              uncertainty: 6
              verticalSpeed: 1
              velocityType: 7
            accuracySemiMinor: 1
            innerRadius: 7
            accuracyAltitude: 6
            uncertaintyRadius: 1
            longitude:
            - 3.6160767
            - 3.6160767
            timestamp:
              seconds: 5
              nanoSeconds: 1
          address: http://example.com/aeiou
          resourceURL: resourceURL
          accessPointId: accessPointId
          zoneId: zoneId
          ancillaryInfo: ancillaryInfo
          contextLocationInfo: contextLocationInfo
          timestamp: null
    UserTrackingSubscription:
      required:
      - address
      - callbackReference
      type: object
      properties:
        address:
          type: string
          description: "Address of user (e.g. \"sip\" URI, \"tel\" URI, \"acr\" URI)\
            \ to monitor"
          x-etsi-mec-cardinality: 1
          x-etsi-mec-origin-type: anyURI
        callbackReference:
          $ref: '#/components/schemas/CallbackReference'
        clientCorrelator:
          type: string
          description: A correlator that the client can use to tag this particular
            resource representation during a request to create a resource on the server.
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: string
        resourceURL:
          type: string
          description: Self referring URL
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: anyURI
        userEventCriteria:
          type: array
          description: "List of user event values to generate notifications for (these\
            \ apply to address specified). If this element is missing, a notification\
            \ is requested to be generated for any change in user event."
          items:
            $ref: '#/components/schemas/UserEventType'
          x-etsi-mec-cardinality: 0..N
          x-etsi-mec-origin-type: UserEventType
      description: A type containing user tracking subscription.
      example:
        address: address
        resourceURL: resourceURL
        callbackReference: null
        clientCorrelator: clientCorrelator
        userEventCriteria:
        - Entering
        - Entering
    ZonalPresenceNotification:
      required:
      - address
      - currentAccessPointId
      - timestamp
      - userEventType
      - zoneId
      type: object
      properties:
        address:
          type: string
          description: "Address of user (e.g. \"sip\" URI, \"tel\" URI, \"acr\" URI)\
            \ to monitor"
          x-etsi-mec-cardinality: 1
          x-etsi-mec-origin-type: anyURI
        callbackData:
          type: string
          description: "CallBackData if passed by the application during the associated\
            \ ZonalTrafficSubscription and UserTrackingSubscription operation. See\
            \ [REST_NetAPI_Common]."
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: string
        currentAccessPointId:
          type: string
          description: Identifier of access point.
          x-etsi-mec-cardinality: 1
          x-etsi-mec-origin-type: string
        interestRealm:
          type: string
          description: "Interest realm of access point (e.g. geographical area, a\
            \ type of industry etc.)."
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: string
        link:
          type: array
          description: Link to other resources that are in relationship with this
            notification. The server SHOULD include a link to the related subscription.
            No other links are required or suggested by this specification
          items:
            $ref: '#/components/schemas/Link'
          x-etsi-mec-cardinality: 0..N
          x-etsi-mec-origin-type: Link
        previousAccessPointId:
          type: string
          description: Identifier of access point.
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: string
        timestamp:
          $ref: '#/components/schemas/TimeStamp'
        userEventType:
          $ref: '#/components/schemas/UserEventType'
        zoneId:
          type: string
          description: Identifier of zone
          x-etsi-mec-cardinality: 1
          x-etsi-mec-origin-type: string
      description: A type containing zonal presence notification
    ZonalTrafficSubscription:
      required:
      - callbackReference
      - zoneId
      type: object
      properties:
        callbackReference:
          $ref: '#/components/schemas/CallbackReference'
        clientCorrelator:
          type: string
          description: A correlator that the client can use to tag this particular
            resource representation during a request to create a resource on the server.
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: string
        duration:
          type: integer
          description: "Period (in seconds) of time notifications are provided for.\
            \ If set to \"0\" (zero), a default duration time, which is specified\
            \ by the service policy, will be used. If the parameter is omitted, the\
            \ notifications will continue until the maximum duration time, which is\
            \ specified by the service policy, unless the notifications are stopped\
            \ by deletion of subscription for notifications. This element MAY be given\
            \ by the client during resource creation in order to signal the desired\
            \ lifetime of the subscription. The server MUST return in this element\
            \ the   period of time for which the subscription will still be valid."
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: unsignedInt
        interestRealm:
          type: array
          description: "Interest realm of access point (e.g. geographical area, a\
            \ type of industry etc.)."
          items:
            type: string
          x-etsi-mec-cardinality: 0..N
          x-etsi-mec-origin-type: string
        resourceURL:
          type: string
          description: Self referring URL
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: anyURI
        userEventCriteria:
          type: array
          description: "List of user event values to generate notifications for (these\
            \ apply to zone identifier or all interest realms within zone identifier\
            \ specified). If this element is missing, a notification is requested\
            \ to be generated for any change in user event."
          items:
            $ref: '#/components/schemas/UserEventType'
          x-etsi-mec-cardinality: 0..N
          x-etsi-mec-origin-type: UserEventType
        zoneId:
          type: string
          description: Identifier of zone
          x-etsi-mec-cardinality: 1
          x-etsi-mec-origin-type: string
      description: A type containing zonal traffic subscription
      example:
        duration: 6
        resourceURL: resourceURL
        callbackReference: null
        clientCorrelator: clientCorrelator
        zoneId: zoneId
        interestRealm:
        - interestRealm
        - interestRealm
        userEventCriteria:
        - null
        - null
    ZoneInfo:
      required:
      - numberOfAccessPoints
      - numberOfUnserviceableAccessPoints
      - numberOfUsers
      - resourceURL
      - zoneId
      type: object
      properties:
        numberOfAccessPoints:
          type: integer
          description: The number of access points within the zone
          x-etsi-mec-cardinality: 1
          x-etsi-mec-origin-type: unsignedInt
        numberOfUnserviceableAccessPoints:
          type: integer
          description: Number of inoperable access points within the zone.
          x-etsi-mec-cardinality: 1
          x-etsi-mec-origin-type: unsignedInt
        numberOfUsers:
          type: integer
          description: The number of users currently on the access point.
          x-etsi-mec-cardinality: 1
          x-etsi-mec-origin-type: unsignedInt
        resourceURL:
          type: string
          description: Self referring URL
          x-etsi-mec-cardinality: 1
          x-etsi-mec-origin-type: anyURI
        zoneId:
          type: string
          description: Identifier of zone
          x-etsi-mec-cardinality: 1
          x-etsi-mec-origin-type: string
      description: A type containing zone information.
      example:
        resourceURL: resourceURL
        numberOfUsers: 1
        zoneId: zoneId
        numberOfAccessPoints: 0
        numberOfUnserviceableAccessPoints: 6
    ZoneList:
      required:
      - resourceURL
      type: object
      properties:
        resourceURL:
          type: string
          description: Self referring URL
          x-etsi-mec-cardinality: 1
          x-etsi-mec-origin-type: anyURI
        zone:
          type: array
          description: Collection of the zone information list.
          items:
            $ref: '#/components/schemas/ZoneInfo'
      description: A type containing a list of zones.
      example:
        resourceURL: resourceURL
        zone:
        - resourceURL: resourceURL
          numberOfUsers: 1
          zoneId: zoneId
          numberOfAccessPoints: 0
          numberOfUnserviceableAccessPoints: 6
        - resourceURL: resourceURL
          numberOfUsers: 1
          zoneId: zoneId
          numberOfAccessPoints: 0
          numberOfUnserviceableAccessPoints: 6
    ZoneStatusNotification:
      required:
      - timestamp
      - zoneId
      type: object
      properties:
        accessPointId:
          type: string
          description: Identifier of an access point.
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: string
        callbackData:
          type: string
          description: "CallBackData if passed by the application during the associated\
            \ ZoneStatusSubscription operation. See [REST_NetAPI_Common]."
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: string
        link:
          type: array
          description: Link to other resources that are in relationship with this
            notification. The server SHOULD include a link to the related subscription.
            No other links are required or suggested by this specification
          items:
            $ref: '#/components/schemas/Link'
          x-etsi-mec-cardinality: 0..N
          x-etsi-mec-origin-type: Link
        numberOfUsersInAP:
          type: integer
          description: This element shall be present when ZoneStatusSubscription includes
            numberOfUsersAPThreshold element and the number of users in an access
            point exceeds the threshold defined in the subscription.
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: unsignedInt
        numberOfUsersInZone:
          type: integer
          description: This element shall be present when ZoneStatusSubscription includes
            numberOfUsersZoneThreshold element and the number of users in a zone exceeds
            the threshold defined in this subscription.
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: unsignedInt
        operationStatus:
          $ref: '#/components/schemas/OperationStatus'
        timestamp:
          $ref: '#/components/schemas/TimeStamp'
        zoneId:
          type: string
          description: Identifier of zone
          x-etsi-mec-cardinality: 1
          x-etsi-mec-origin-type: string
      description: A type containing zone status notification.
    ZoneStatusSubscription:
      required:
      - callbackReference
      - zoneId
      type: object
      properties:
        callbackReference:
          $ref: '#/components/schemas/CallbackReference'
        clientCorrelator:
          type: string
          description: A correlator that the client can use to tag this particular
            resource representation during a request to create a resource on the server.
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: string
        numberOfUsersAPThreshold:
          type: integer
          description: Threshold number of users in an access point which if crossed
            shall cause a notification
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: unsignedInt
        numberOfUsersZoneThreshold:
          type: integer
          description: Threshold number of users in a zone which if crossed shall
            cause a notification
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: unsignedInt
        operationStatus:
          type: array
          description: List of operation status values to generate notifications for
            (these apply to all access points within a zone).
          items:
            $ref: '#/components/schemas/OperationStatus'
          x-etsi-mec-cardinality: 0..N
          x-etsi-mec-origin-type: OperationStatus
        resourceURL:
          type: string
          description: Self referring URL
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: anyURI
        zoneId:
          type: string
          description: Identifier of zone
          x-etsi-mec-cardinality: 1
          x-etsi-mec-origin-type: string
      description: A type containing zone status subscription.
      example:
        operationStatus:
        - Serviceable
        - Serviceable
        numberOfUsersAPThreshold: 7
        resourceURL: resourceURL
        callbackReference: null
        clientCorrelator: clientCorrelator
        zoneId: zoneId
        numberOfUsersZoneThreshold: 1
    inline_response_200:
      type: object
      properties:
        terminalDistance:
          $ref: '#/components/schemas/TerminalDistance'
      example:
        terminalDistance:
          distance: 6
          accuracy: 0
          timestamp:
            seconds: 5
            nanoSeconds: 1
    inline_response_200_1:
      type: object
      properties:
        userList:
          $ref: '#/components/schemas/UserList'
      example:
        userList:
          resourceURL: resourceURL
          user:
          - locationInfo:
              altitude: 5.962134
              orientationMajorAxis: 4
              shape: 7
              confidence: 5
              latitude:
              - 9.301444
              - 9.301444
              offsetAngle: 2
              accuracy: 0
              includedAngle: 2
              velocity:
                verticalUncertainty: 4
                horizontalSpeed: 1
                bearing: 1
                uncertainty: 6
                verticalSpeed: 1
                velocityType: 7
              accuracySemiMinor: 1
              innerRadius: 7
              accuracyAltitude: 6
              uncertaintyRadius: 1
              longitude:
              - 3.6160767
              - 3.6160767
              timestamp:
                seconds: 5
                nanoSeconds: 1
            address: http://example.com/aeiou
            resourceURL: resourceURL
            accessPointId: accessPointId
            zoneId: zoneId
            ancillaryInfo: ancillaryInfo
            contextLocationInfo: contextLocationInfo
            timestamp: null
          - locationInfo:
              altitude: 5.962134
              orientationMajorAxis: 4
              shape: 7
              confidence: 5
              latitude:
              - 9.301444
              - 9.301444
              offsetAngle: 2
              accuracy: 0
              includedAngle: 2
              velocity:
                verticalUncertainty: 4
                horizontalSpeed: 1
                bearing: 1
                uncertainty: 6
                verticalSpeed: 1
                velocityType: 7
              accuracySemiMinor: 1
              innerRadius: 7
              accuracyAltitude: 6
              uncertaintyRadius: 1
              longitude:
              - 3.6160767
              - 3.6160767
              timestamp:
                seconds: 5
                nanoSeconds: 1
            address: http://example.com/aeiou
            resourceURL: resourceURL
            accessPointId: accessPointId
            zoneId: zoneId
            ancillaryInfo: ancillaryInfo
            contextLocationInfo: contextLocationInfo
            timestamp: null
    inline_response_200_2:
      type: object
      properties:
        zoneList:
          $ref: '#/components/schemas/ZoneList'
      example:
        zoneList:
          resourceURL: resourceURL
          zone:
          - resourceURL: resourceURL
            numberOfUsers: 1
            zoneId: zoneId
            numberOfAccessPoints: 0
            numberOfUnserviceableAccessPoints: 6
          - resourceURL: resourceURL
            numberOfUsers: 1
            zoneId: zoneId
            numberOfAccessPoints: 0
            numberOfUnserviceableAccessPoints: 6
    inline_response_200_3:
      type: object
      properties:
        zoneInfo:
          $ref: '#/components/schemas/ZoneInfo'
      example:
        zoneInfo:
          resourceURL: resourceURL
          numberOfUsers: 1
          zoneId: zoneId
          numberOfAccessPoints: 0
          numberOfUnserviceableAccessPoints: 6
    inline_response_200_4:
      type: object
      properties:
        accessPointList:
          $ref: '#/components/schemas/AccessPointList'
      example:
        accessPointList:
          resourceURL: resourceURL
          zoneId: zoneId
          accessPoint:
          - locationInfo:
              altitude: 5.962134
              orientationMajorAxis: 4
              shape: 7
              confidence: 5
              latitude:
              - 9.301444
              - 9.301444
              offsetAngle: 2
              accuracy: 0
              includedAngle: 2
              velocity:
                verticalUncertainty: 4
                horizontalSpeed: 1
                bearing: 1
                uncertainty: 6
                verticalSpeed: 1
                velocityType: 7
              accuracySemiMinor: 1
              innerRadius: 7
              accuracyAltitude: 6
              uncertaintyRadius: 1
              longitude:
              - 3.6160767
              - 3.6160767
              timestamp:
                seconds: 5
                nanoSeconds: 1
            operationStatus: Serviceable
            resourceURL: resourceURL
            numberOfUsers: 0
            timezone: timezone
            accessPointId: accessPointId
            interestRealm: interestRealm
            connectionType: Femto
          - locationInfo:
              altitude: 5.962134
              orientationMajorAxis: 4
              shape: 7
              confidence: 5
              latitude:
              - 9.301444
              - 9.301444
              offsetAngle: 2
              accuracy: 0
              includedAngle: 2
              velocity:
                verticalUncertainty: 4
                horizontalSpeed: 1
                bearing: 1
                uncertainty: 6
                verticalSpeed: 1
                velocityType: 7
              accuracySemiMinor: 1
              innerRadius: 7
              accuracyAltitude: 6
              uncertaintyRadius: 1
              longitude:
              - 3.6160767
              - 3.6160767
              timestamp:
                seconds: 5
                nanoSeconds: 1
            operationStatus: Serviceable
            resourceURL: resourceURL
            numberOfUsers: 0
            timezone: timezone
            accessPointId: accessPointId
            interestRealm: interestRealm
            connectionType: Femto
    inline_response_200_5:
      type: object
      properties:
        accessPointInfo:
          $ref: '#/components/schemas/AccessPointInfo'
      example:
        accessPointInfo:
          locationInfo:
            altitude: 5.962134
            orientationMajorAxis: 4
            shape: 7
            confidence: 5
            latitude:
            - 9.301444
            - 9.301444
            offsetAngle: 2
            accuracy: 0
            includedAngle: 2
            velocity:
              verticalUncertainty: 4
              horizontalSpeed: 1
              bearing: 1
              uncertainty: 6
              verticalSpeed: 1
              velocityType: 7
            accuracySemiMinor: 1
            innerRadius: 7
            accuracyAltitude: 6
            uncertaintyRadius: 1
            longitude:
            - 3.6160767
            - 3.6160767
            timestamp:
              seconds: 5
              nanoSeconds: 1
          operationStatus: Serviceable
          resourceURL: resourceURL
          numberOfUsers: 0
          timezone: timezone
          accessPointId: accessPointId
          interestRealm: interestRealm
          connectionType: Femto
    inline_response_200_6:
      required:
      - notificationSubscriptionList
      type: object
      properties:
        notificationSubscriptionList:
          $ref: '#/components/schemas/NotificationSubscriptionList'
      example:
        notificationSubscriptionList:
          distanceNotificationSubscription:
          - requester: requester
            trackingAccuracy: 7.386282
            distance: 3.6160767
            callbackReference: null
            criteria: AllWithinDistance
            count: 9
            link:
            - null
            - null
            frequency: 4
            duration: 2
            monitoredAddress:
            - monitoredAddress
            - monitoredAddress
            referenceAddress:
            - referenceAddress
            - referenceAddress
            resourceURL: resourceURL
            clientCorrelator: clientCorrelator
            checkImmediate: true
          - requester: requester
            trackingAccuracy: 7.386282
            distance: 3.6160767
            callbackReference: null
            criteria: AllWithinDistance
            count: 9
            link:
            - null
            - null
            frequency: 4
            duration: 2
            monitoredAddress:
            - monitoredAddress
            - monitoredAddress
            referenceAddress:
            - referenceAddress
            - referenceAddress
            resourceURL: resourceURL
            clientCorrelator: clientCorrelator
            checkImmediate: true
          circleNotificationSubscription:
          - requester: requester
            trackingAccuracy: 7.0614014
            address:
            - address
            - address
            callbackReference:
              notificationFormat: XML
              callbackData: callbackData
              notifyURL: notifyURL
            latitude: 5.962134
            count: 0
            link:
            - rel: rel
              href: href
            - rel: rel
              href: href
            frequency: 1
            duration: 6
            enteringLeavingCriteria: Entering
            resourceURL: resourceURL
            clientCorrelator: clientCorrelator
            checkImmediate: true
            radius: 2.302136
            longitude: 5.637377
          - requester: requester
            trackingAccuracy: 7.0614014
            address:
            - address
            - address
            callbackReference:
              notificationFormat: XML
              callbackData: callbackData
              notifyURL: notifyURL
            latitude: 5.962134
            count: 0
            link:
            - rel: rel
              href: href
            - rel: rel
              href: href
            frequency: 1
            duration: 6
            enteringLeavingCriteria: Entering
            resourceURL: resourceURL
            clientCorrelator: clientCorrelator
            checkImmediate: true
            radius: 2.302136
            longitude: 5.637377
          resourceURL: http://example.com/aeiou
          userTrackingSubscription:
          - address: address
            resourceURL: resourceURL
            callbackReference: null
            clientCorrelator: clientCorrelator
            userEventCriteria:
            - Entering
            - Entering
          - address: address
            resourceURL: resourceURL
            callbackReference: null
            clientCorrelator: clientCorrelator
            userEventCriteria:
            - Entering
            - Entering
          zonalTrafficSubscription:
          - duration: 6
            resourceURL: resourceURL
            callbackReference: null
            clientCorrelator: clientCorrelator
            zoneId: zoneId
            interestRealm:
            - interestRealm
            - interestRealm
            userEventCriteria:
            - null
            - null
          - duration: 6
            resourceURL: resourceURL
            callbackReference: null
            clientCorrelator: clientCorrelator
            zoneId: zoneId
            interestRealm:
            - interestRealm
            - interestRealm
            userEventCriteria:
            - null
            - null
          zoneStatusSubscription:
          - operationStatus:
            - Serviceable
            - Serviceable
            numberOfUsersAPThreshold: 7
            resourceURL: resourceURL
            callbackReference: null
            clientCorrelator: clientCorrelator
            zoneId: zoneId
            numberOfUsersZoneThreshold: 1
          - operationStatus:
            - Serviceable
            - Serviceable
            numberOfUsersAPThreshold: 7
            resourceURL: resourceURL
            callbackReference: null
            clientCorrelator: clientCorrelator
            zoneId: zoneId
            numberOfUsersZoneThreshold: 1
          periodicNotificationSubscription:
          - duration: 1
            requester: requester
            address:
            - address
            - address
            resourceURL: resourceURL
            callbackReference: null
            clientCorrelator: clientCorrelator
            link:
            - null
            - null
            frequency: 1
            requestedAccuracy: 1
          - duration: 1
            requester: requester
            address:
            - address
            - address
            resourceURL: resourceURL
            callbackReference: null
            clientCorrelator: clientCorrelator
            link:
            - null
            - null
            frequency: 1
            requestedAccuracy: 1
    area_circle_body:
      type: object
      properties:
        circleNotificationSubscription:
          $ref: '#/components/schemas/CircleNotificationSubscription'
      example:
        circleNotificationSubscription:
          requester: requester
          trackingAccuracy: 7.0614014
          address:
          - address
          - address
          callbackReference:
            notificationFormat: XML
            callbackData: callbackData
            notifyURL: notifyURL
          latitude: 5.962134
          count: 0
          link:
          - rel: rel
            href: href
          - rel: rel
            href: href
          frequency: 1
          duration: 6
          enteringLeavingCriteria: Entering
          resourceURL: resourceURL
          clientCorrelator: clientCorrelator
          checkImmediate: true
          radius: 2.302136
          longitude: 5.637377
    inline_response_200_7:
      required:
      - circleNotificationSubscription
      type: object
      properties:
        circleNotificationSubscription:
          $ref: '#/components/schemas/CircleNotificationSubscription'
      example:
        circleNotificationSubscription:
          requester: requester
          trackingAccuracy: 7.0614014
          address:
          - address
          - address
          callbackReference:
            notificationFormat: XML
            callbackData: callbackData
            notifyURL: notifyURL
          latitude: 5.962134
          count: 0
          link:
          - rel: rel
            href: href
          - rel: rel
            href: href
          frequency: 1
          duration: 6
          enteringLeavingCriteria: Entering
          resourceURL: resourceURL
          clientCorrelator: clientCorrelator
          checkImmediate: true
          radius: 2.302136
          longitude: 5.637377
    circle_subscriptionId_body:
      type: object
      properties:
        circleNotificationSubscription:
          $ref: '#/components/schemas/CircleNotificationSubscription'
      example:
        circleNotificationSubscription:
          requester: requester
          trackingAccuracy: 7.0614014
          address:
          - address
          - address
          callbackReference:
            notificationFormat: XML
            callbackData: callbackData
            notifyURL: notifyURL
          latitude: 5.962134
          count: 0
          link:
          - rel: rel
            href: href
          - rel: rel
            href: href
          frequency: 1
          duration: 6
          enteringLeavingCriteria: Entering
          resourceURL: resourceURL
          clientCorrelator: clientCorrelator
          checkImmediate: true
          radius: 2.302136
          longitude: 5.637377
    subscriptions_distance_body:
      type: object
      properties:
        distanceNotificationSubscription:
          $ref: '#/components/schemas/DistanceNotificationSubscription'
      example:
        distanceNotificationSubscription:
          requester: requester
          trackingAccuracy: 7.386282
          distance: 3.6160767
          callbackReference: null
          criteria: AllWithinDistance
          count: 9
          link:
          - null
          - null
          frequency: 4
          duration: 2
          monitoredAddress:
          - monitoredAddress
          - monitoredAddress
          referenceAddress:
          - referenceAddress
          - referenceAddress
          resourceURL: resourceURL
          clientCorrelator: clientCorrelator
          checkImmediate: true
    inline_response_200_8:
      required:
      - distanceNotificationSubscription
      type: object
      properties:
        distanceNotificationSubscription:
          $ref: '#/components/schemas/DistanceNotificationSubscription'
      example:
        distanceNotificationSubscription:
          requester: requester
          trackingAccuracy: 7.386282
          distance: 3.6160767
          callbackReference: null
          criteria: AllWithinDistance
          count: 9
          link:
          - null
          - null
          frequency: 4
          duration: 2
          monitoredAddress:
          - monitoredAddress
          - monitoredAddress
          referenceAddress:
          - referenceAddress
          - referenceAddress
          resourceURL: resourceURL
          clientCorrelator: clientCorrelator
          checkImmediate: true
    distance_subscriptionId_body:
      type: object
      properties:
        distanceNotificationSubscription:
          $ref: '#/components/schemas/DistanceNotificationSubscription'
      example:
        distanceNotificationSubscription:
          requester: requester
          trackingAccuracy: 7.386282
          distance: 3.6160767
          callbackReference: null
          criteria: AllWithinDistance
          count: 9
          link:
          - null
          - null
          frequency: 4
          duration: 2
          monitoredAddress:
          - monitoredAddress
          - monitoredAddress
          referenceAddress:
          - referenceAddress
          - referenceAddress
          resourceURL: resourceURL
          clientCorrelator: clientCorrelator
          checkImmediate: true
    subscriptions_periodic_body:
      type: object
      properties:
        periodicNotificationSubscription:
          $ref: '#/components/schemas/PeriodicNotificationSubscription'
      example:
        periodicNotificationSubscription:
          duration: 1
          requester: requester
          address:
          - address
          - address
          resourceURL: resourceURL
          callbackReference: null
          clientCorrelator: clientCorrelator
          link:
          - null
          - null
          frequency: 1
          requestedAccuracy: 1
    inline_response_200_9:
      required:
      - periodicNotificationSubscription
      type: object
      properties:
        periodicNotificationSubscription:
          $ref: '#/components/schemas/PeriodicNotificationSubscription'
      example:
        periodicNotificationSubscription:
          duration: 1
          requester: requester
          address:
          - address
          - address
          resourceURL: resourceURL
          callbackReference: null
          clientCorrelator: clientCorrelator
          link:
          - null
          - null
          frequency: 1
          requestedAccuracy: 1
    periodic_subscriptionId_body:
      type: object
      properties:
        periodicNotificationSubscription:
          $ref: '#/components/schemas/PeriodicNotificationSubscription'
      example:
        periodicNotificationSubscription:
          duration: 1
          requester: requester
          address:
          - address
          - address
          resourceURL: resourceURL
          callbackReference: null
          clientCorrelator: clientCorrelator
          link:
          - null
          - null
          frequency: 1
          requestedAccuracy: 1
    subscriptions_userTracking_body:
      type: object
      properties:
        userTrackingSubscription:
          $ref: '#/components/schemas/UserTrackingSubscription'
      example:
        userTrackingSubscription:
          address: address
          resourceURL: resourceURL
          callbackReference: null
          clientCorrelator: clientCorrelator
          userEventCriteria:
          - Entering
          - Entering
    inline_response_200_10:
      required:
      - userTrackingSubscription
      type: object
      properties:
        userTrackingSubscription:
          $ref: '#/components/schemas/UserTrackingSubscription'
      example:
        userTrackingSubscription:
          address: address
          resourceURL: resourceURL
          callbackReference: null
          clientCorrelator: clientCorrelator
          userEventCriteria:
          - Entering
          - Entering
    userTracking_subscriptionId_body:
      type: object
      properties:
        userTrackingSubscription:
          $ref: '#/components/schemas/UserTrackingSubscription'
      example:
        userTrackingSubscription:
          address: address
          resourceURL: resourceURL
          callbackReference: null
          clientCorrelator: clientCorrelator
          userEventCriteria:
          - Entering
          - Entering
    subscriptions_zonalTraffic_body:
      type: object
      properties:
        zonalTrafficSubscription:
          $ref: '#/components/schemas/ZonalTrafficSubscription'
      example:
        zonalTrafficSubscription:
          duration: 6
          resourceURL: resourceURL
          callbackReference: null
          clientCorrelator: clientCorrelator
          zoneId: zoneId
          interestRealm:
          - interestRealm
          - interestRealm
          userEventCriteria:
          - null
          - null
    inline_response_200_11:
      required:
      - zonalTrafficSubscription
      type: object
      properties:
        zonalTrafficSubscription:
          $ref: '#/components/schemas/ZonalTrafficSubscription'
      example:
        zonalTrafficSubscription:
          duration: 6
          resourceURL: resourceURL
          callbackReference: null
          clientCorrelator: clientCorrelator
          zoneId: zoneId
          interestRealm:
          - interestRealm
          - interestRealm
          userEventCriteria:
          - null
          - null
    zonalTraffic_subscriptionId_body:
      type: object
      properties:
        zonalTrafficSubscription:
          $ref: '#/components/schemas/ZonalTrafficSubscription'
      example:
        zonalTrafficSubscription:
          duration: 6
          resourceURL: resourceURL
          callbackReference: null
          clientCorrelator: clientCorrelator
          zoneId: zoneId
          interestRealm:
          - interestRealm
          - interestRealm
          userEventCriteria:
          - null
          - null
    subscriptions_zoneStatus_body:
      type: object
      properties:
        zoneStatusSubscription:
          $ref: '#/components/schemas/ZoneStatusSubscription'
      example:
        zoneStatusSubscription:
          operationStatus:
          - Serviceable
          - Serviceable
          numberOfUsersAPThreshold: 7
          resourceURL: resourceURL
          callbackReference: null
          clientCorrelator: clientCorrelator
          zoneId: zoneId
          numberOfUsersZoneThreshold: 1
    inline_response_200_12:
      required:
      - zoneStatusSubscription
      type: object
      properties:
        zoneStatusSubscription:
          $ref: '#/components/schemas/ZoneStatusSubscription'
      example:
        zoneStatusSubscription:
          operationStatus:
          - Serviceable
          - Serviceable
          numberOfUsersAPThreshold: 7
          resourceURL: resourceURL
          callbackReference: null
          clientCorrelator: clientCorrelator
          zoneId: zoneId
          numberOfUsersZoneThreshold: 1
    zoneStatus_subscriptionId_body:
      type: object
      properties:
        zoneStatusSubscription:
          $ref: '#/components/schemas/ZoneStatusSubscription'
      example:
        zoneStatusSubscription:
          operationStatus:
          - Serviceable
          - Serviceable
          numberOfUsersAPThreshold: 7
          resourceURL: resourceURL
          callbackReference: null
          clientCorrelator: clientCorrelator
          zoneId: zoneId
          numberOfUsersZoneThreshold: 1
    LocationInfo_velocity:
      required:
      - bearing
      - horizontalSpeed
      - velocityType
      type: object
      properties:
        bearing:
          type: integer
          description: "Bearing, expressed in the range 0° to 360°, as defined in\
            \ ETSI TS 123 032 [14]."
          x-etsi-mec-cardinality: "1"
          x-etsi-mec-origin-type: UnsignedInt
        horizontalSpeed:
          type: integer
          description: "Horizontal speed, expressed in km/h and defined in ETSI TS\
            \ 123 032 [14]."
          x-etsi-mec-cardinality: "1"
          x-etsi-mec-origin-type: UnsignedInt
        uncertainty:
          type: integer
          description: "Horizontal uncertainty, as defined in ETSI TS 123 032 [14].\
            \ Present only if \"velocityType\" equals 3 or 4"
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: UnsignedInt
        velocityType:
          type: integer
          description: "Velocity information, as detailed in ETSI TS 123 032 [14],\
            \ associated with the reported location coordinate: <p>1 = HORIZONTAL\
            \ <p>2 = HORIZONTAL_VERTICAL <p>3 = HORIZONTAL_UNCERT <p>4 = HORIZONTAL_VERTICAL_UNCERT"
          x-etsi-mec-cardinality: "1"
          x-etsi-mec-origin-type: Enum_inlined
        verticalSpeed:
          type: integer
          description: "Vertical speed, expressed in km/h and defined in ETSI TS 123\
            \ 032 [14]. Present only if \"velocityType\" equals 2 or 4"
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: Int
        verticalUncertainty:
          type: integer
          description: "Vertical uncertainty, as defined in ETSI TS 123 032 [14].\
            \ Present only if \"velocityType\" equals 4"
          x-etsi-mec-cardinality: 0..1
          x-etsi-mec-origin-type: UnsignedInt
      description: "Structure with attributes relating to the target entity’s velocity,\
        \ as defined in ETSI TS 123 032 [14]."
      example:
        verticalUncertainty: 4
        horizontalSpeed: 1
        bearing: 1
        uncertainty: 6
        verticalSpeed: 1
        velocityType: 7
    CategoryRef:
      title: CategoryRef
      required:
      - href
      - id
      - name
      - version
      type: object
      properties:
        href:
          type: string
          description: Reference of the catalogue
        id:
          type: string
          description: Unique identifier of the category
        name:
          type: string
          description: "Name of the category, example values include RNI, Location\
            \ & Bandwidth Management"
        version:
          type: string
          description: Category version
      description: This type represents the category reference
      example:
        name: name
        href: href
        id: id
        version: version
    EndPointInfo.Address:
      title: EndPointInfo.Address
      required:
      - host
      - port
      type: object
      properties:
        host:
          type: string
          description: Host portion of the address
        port:
          type: integer
          description: Port portion of the address
      description: A IP address and port pair
    EndPointInfo.Addresses:
      title: EndPointInfo.Addresses
      required:
      - addresses
      type: object
      properties:
        addresses:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/EndPointInfo.Address'
      description: Entry point information of the service as one or more pairs of
        IP address and port
    EndPointInfo.Alternative:
      title: EndPointInfo.Alternative
      required:
      - alternative
      type: object
      properties:
        alternative:
          type: object
      description: "Entry point information of the service in a format defined by\
        \ an implementation, or in an external specification."
    EndPointInfo.Uris:
      title: EndPointInfo.Uris
      required:
      - uris
      type: object
      properties:
        uris:
          type: array
          description: ""
          items:
            type: string
      description: "Entry point information of the service as string, formatted according\
        \ to URI syntax"
    LinkType:
      title: LinkType
      type: object
      properties:
        href:
          type: string
          description: URI referring to a resource
      description: This type represents a type of link and may be referenced from
        data structures
      example:
        href: href
    MecServiceMgmtApiSubscriptionLinkList.Links:
      title: MecServiceMgmtApiSubscriptionLinkList.Links
      required:
      - self
      type: object
      properties:
        self:
          $ref: '#/components/schemas/LinkType'
        subscriptions:
          type: array
          description: The MEC application instance's subscriptions
          items:
            $ref: '#/components/schemas/MecServiceMgmtApiSubscriptionLinkList.Subscription'
      description: Self-referring URI.
      example:
        subscriptions:
        - rel: rel
          href: href
        - rel: rel
          href: href
        self:
          href: href
    MecServiceMgmtApiSubscriptionLinkList.Subscription:
      title: MecServiceMgmtApiSubscriptionLinkList.Subscription
      required:
      - href
      - rel
      type: object
      properties:
        href:
          type: string
          description: URI referring to a resource
        rel:
          type: string
          description: The value shall be se to SerAvailabilityNotificationSubscription.
      description: A link to a subscription.
      example:
        rel: rel
        href: href
    MecServiceMgmtApiSubscriptionLinkList:
      title: MecServiceMgmtApiSubscriptionLinkList
      required:
      - _links
      type: object
      properties:
        _links:
          $ref: '#/components/schemas/MecServiceMgmtApiSubscriptionLinkList.Links'
      description: This type represents a list of links related to currently existing
        subscriptions for a MEC application instance. This information is returned
        when sending a request to receive current subscriptions.
      example:
        _links:
          subscriptions:
          - rel: rel
            href: href
          - rel: rel
            href: href
          self:
            href: href
    ProblemDetails:
      title: ProblemDetails
      type: object
      properties:
        type:
          type: string
          description: A URI reference according to IETF RFC 3986 that identifies
            the problem type
        title:
          type: string
          description: "A short, human-readable summary of the problem type"
        status:
          type: integer
          description: The HTTP status code for this occurrence of the problem
        detail:
          type: string
          description: A human-readable explanation specific to this occurrence of
            the problem
        instance:
          type: string
          description: A URI reference that identifies the specific occurrence of
            the problem
    SecurityInfo.OAuth2Info.GrantType:
      title: SecurityInfo.OAuth2Info.GrantType
      type: string
      description: OAuth 2.0 grant type
      enum:
      - OAUTH2_AUTHORIZATION_CODE
      - OAUTH2_IMPLICIT_GRANT
      - OAUTH2_RESOURCE_OWNER
      - OAUTH2_CLIENT_CREDENTIALS
    SecurityInfo.OAuth2Info:
      title: SecurityInfo.OAuth2Info
      required:
      - grantTypes
      - tokenEndpoint
      type: object
      properties:
        grantTypes:
          maxItems: 4
          minItems: 1
          type: array
          description: List of supported OAuth 2.0 grant types.
          items:
            $ref: '#/components/schemas/SecurityInfo.OAuth2Info.GrantType'
        tokenEndpoint:
          type: string
          description: The token endpoint
      description: Parameters related to use of OAuth 2.0
      example:
        tokenEndpoint: tokenEndpoint
        grantTypes:
        - OAUTH2_AUTHORIZATION_CODE
        - OAUTH2_AUTHORIZATION_CODE
        - OAUTH2_AUTHORIZATION_CODE
        - OAUTH2_AUTHORIZATION_CODE
    SecurityInfo:
      title: SecurityInfo
      type: object
      properties:
        oAuth2Info:
          $ref: '#/components/schemas/SecurityInfo.OAuth2Info'
      description: This type represents security information related to a transport
      example:
        oAuth2Info:
          tokenEndpoint: tokenEndpoint
          grantTypes:
          - OAUTH2_AUTHORIZATION_CODE
          - OAUTH2_AUTHORIZATION_CODE
          - OAUTH2_AUTHORIZATION_CODE
          - OAUTH2_AUTHORIZATION_CODE
    Self:
      title: Self
      required:
      - self
      type: object
      properties:
        self:
          $ref: '#/components/schemas/LinkType'
      description: Self-referring URI.
      example:
        self:
          href: href
    SerAvailabilityNotificationSubscription:
      title: SerAvailabilityNotificationSubscription
      required:
      - _links
      - callbackReference
      - subscriptionType
      type: object
      properties:
        subscriptionType:
          type: string
          description: Shall be set to SerAvailabilityNotificationSubscription.
        callbackReference:
          type: string
          description: URI selected by the MEC application instance to receive notifications
            on the subscribed MEC service availability information. This shall be
            included in both the request and the response.
        _links:
          $ref: '#/components/schemas/Self'
        filteringCriteria:
          $ref: '#/components/schemas/SerAvailabilityNotificationSubscription.FilteringCriteria'
      example:
        filteringCriteria:
          serNames:
          - serNames
          - serNames
          serInstanceIds:
          - serInstanceIds
          - serInstanceIds
          serCategories:
          - name: name
            href: href
            id: id
            version: version
          - name: name
            href: href
            id: id
            version: version
          states:
          - ACTIVE
          - ACTIVE
          isLocal: true
        subscriptionType: subscriptionType
        _links:
          self:
            href: href
        callbackReference: callbackReference
    SerAvailabilityNotificationSubscription.FilteringCriteria:
      title: SerAvailabilityNotificationSubscription.FilteringCriteria
      type: object
      properties:
        serInstanceIds:
          type: array
          description: Identifiers of service instances about which to report events.
          items:
            type: string
        serNames:
          type: array
          description: Names of services about which to report events.
          items:
            type: string
        serCategories:
          type: array
          description: Categories of services about which to report events.
          items:
            $ref: '#/components/schemas/CategoryRef'
        states:
          type: array
          description: "States of the services about which to report events. If the\
            \ event is  a state change, this filter represents the state after the\
            \ change."
          items:
            $ref: '#/components/schemas/ServiceState'
        isLocal:
          type: boolean
          description: Indicate whether the service is located in the same locality
            (as defined by scopeOfLocality) as the consuming MEC application.
      description: "Filtering criteria to match services for which events are requested\
        \ to be reported. If absent, matches all services. All child attributes are\
        \ combined with the logical  \"AND\" operation."
      example:
        serNames:
        - serNames
        - serNames
        serInstanceIds:
        - serInstanceIds
        - serInstanceIds
        serCategories:
        - name: name
          href: href
          id: id
          version: version
        - name: name
          href: href
          id: id
          version: version
        states:
        - ACTIVE
        - ACTIVE
        isLocal: true
    ServiceAvailabilityNotification:
      title: ServiceAvailabilityNotification
      required:
      - _links
      - notificationType
      - serviceReferences
      type: object
      properties:
        notificationType:
          type: string
          description: Shall be set to SerAvailabilityNotificationSubscription.
        serviceReferences:
          type: array
          description: ""
          items:
            $ref: '#/components/schemas/ServiceAvailabilityNotification.ServiceReferences'
        _links:
          $ref: '#/components/schemas/Subscription'
      description: This type represents the service availability information.
    ServiceAvailabilityNotification.ServiceReferences:
      title: ServiceAvailabilityNotification.ServiceReferences
      required:
      - changeType
      - serInstanceId
      - serName
      - state
      type: object
      properties:
        link:
          $ref: '#/components/schemas/LinkType'
        serName:
          type: string
          description: The name of the service. This is how the service producing
            MEC application identifies the service instance it produces.
        serInstanceId:
          type: string
          description: Identifier of the service instance assigned by the MEC platform.
        state:
          $ref: '#/components/schemas/ServiceState'
        changeType:
          $ref: '#/components/schemas/ServiceAvailabilityNotification.ChangeType'
      description: List of links to services whose availability has changed.
    ServiceAvailabilityNotification.ChangeType:
      title: ServiceAvailabilityNotification.ChangeType
      type: string
      description: "Type of the change. Valid values:\n  1. ADDED: The service was\
        \ newly added.\n  2. REMOVED: The service was removed.\n  3. STATE_CHANGED:\
        \ Only the state of the service was changed. \n  4. ATTRIBUTES_CHANGED: At\
        \ least one attribute of the service other than state was changed. The change\
        \ may or may not include changing the state."
      enum:
      - ADDED
      - REMOVED
      - STATE_CHANGED
      - ATTRIBUTES_CHANGED
    SerializerType:
      title: SerializerType
      type: string
      description: The enumeration  represents types of serializers
      enum:
      - JSON
      - XML
      - PROTOBUF3
    LocalityType:
      title: LocalityType
      type: string
      description: "The scope of locality as expressed by \"consumedLocalOnly\" and\
        \ \"isLocal\". If absent, defaults to MEC_HOST"
      enum:
      - MEC_SYSTEM
      - MEC_HOST
      - NFVI_POP
      - ZONE
      - ZONE_GROUP
      - NFVI_NODE
    ServiceState:
      title: ServiceState
      type: string
      description: This enumeration defines the possible states of a service.
      enum:
      - ACTIVE
      - INACTIVE
      - SUSPENDED
    ServiceInfo:
      title: ServiceInfo
      required:
      - serName
      - serializer
      - state
      - transportInfo
      - version
      type: object
      properties:
        serInstanceId:
          type: string
          description: Identifier of the service instance assigned by the MEC platform.
        serName:
          type: string
          description: The name of the service. This is how the service producing
            MEC application identifies the service instance it produces.
        serCategory:
          $ref: '#/components/schemas/CategoryRef'
        version:
          type: string
          description: Service version
        state:
          $ref: '#/components/schemas/ServiceState'
        transportInfo:
          $ref: '#/components/schemas/TransportInfo'
        serializer:
          $ref: '#/components/schemas/SerializerType'
        scopeOfLocality:
          $ref: '#/components/schemas/LocalityType'
        consumedLocalOnly:
          type: boolean
          description: Indicate whether the service can only be consumed by the MEC
            applications located in the same locality (as defined by scopeOfLocality)
            as this  service instance.
        isLocal:
          type: boolean
          description: Indicate whether the service is located in the same locality
            (as defined by scopeOfLocality) as the consuming MEC application.
        livenessInterval:
          type: integer
          description: "Interval (in seconds) between two consecutive \"heartbeat\"\
            \ messages (see clause 8.2.10.3.3). If the service-producing application\
            \ supports sending \"heartbeat\" messages, it shall include this attribute\
            \ in the swagger_server request. In this case, the application shall either\
            \ set the value of this attribute to zero or shall use this attribute\
            \ to propose a non-zero positive value for the liveness interval. If the\
            \ application has provided this attribute in the request and the MEC platform\
            \ requires \"heartbeat\" messages, the MEC platform shall return this\
            \ attribute value in the HTTP responses. The MEC platform may use the\
            \ value proposed in the request or may choose a different value. If the\
            \ MEC platform does not require \"heartbeat\" messages for this service\
            \ instance it shall omit the attribute in responses."
        _links:
          $ref: '#/components/schemas/ServiceInfo__links'
      description: This type represents the general information of a MEC service.
      example:
        serCategory:
          name: name
          href: href
          id: id
          version: version
        scopeOfLocality: MEC_SYSTEM
        livenessInterval: 0
        transportInfo:
          implSpecificInfo: {}
          protocol: protocol
          endpoint: ""
          security:
            oAuth2Info:
              tokenEndpoint: tokenEndpoint
              grantTypes:
              - OAUTH2_AUTHORIZATION_CODE
              - OAUTH2_AUTHORIZATION_CODE
              - OAUTH2_AUTHORIZATION_CODE
              - OAUTH2_AUTHORIZATION_CODE
          name: name
          description: description
          id: id
          type: REST_HTTP
          version: version
        _links:
          liveness: null
          self:
            href: href
        serializer: JSON
        serName: serName
        state: ACTIVE
        consumedLocalOnly: true
        version: version
        serInstanceId: serInstanceId
        isLocal: true
    ServiceLivenessInfo:
      required:
      - interval
      - state
      - timeStamp
      type: object
      properties:
        state:
          $ref: '#/components/schemas/ServiceState'
        timeStamp:
          $ref: '#/components/schemas/ServiceLivenessInfo_timeStamp'
        interval:
          type: integer
          description: The interval (in seconds) between two consecutive "heartbeat"
            messages (see clause 8.2.10.3.3) that MEC platform has determined.
      example:
        timeStamp:
          seconds: 0
          nanoSeconds: 6
        interval: 1
        state: ACTIVE
    ServiceLivenessUpdate:
      required:
      - state
      type: object
      properties:
        state:
          $ref: '#/components/schemas/ServiceState'
    Subscription:
      title: Subscription
      required:
      - subscription
      type: object
      properties:
        subscription:
          $ref: '#/components/schemas/LinkType'
      description: A link to the related subscription
    TransportInfo:
      title: TransportInfo
      required:
      - endpoint
      - id
      - name
      - protocol
      - security
      - type
      - version
      type: object
      properties:
        id:
          type: string
          description: The identifier of this transport
        name:
          type: string
          description: The name of this transport
        description:
          type: string
          description: Human-readable description of this transport
        type:
          $ref: '#/components/schemas/TransportType'
        protocol:
          type: string
          description: The name of the protocol used. Shall be set to HTTP for a REST
            API.
        version:
          type: string
          description: The version of the protocol used
        endpoint:
          description: This type represents information about a transport endpoint
          oneOf:
          - $ref: '#/components/schemas/EndPointInfo.Uris'
          - $ref: '#/components/schemas/EndPointInfo.Addresses'
          - $ref: '#/components/schemas/EndPointInfo.Alternative'
        security:
          $ref: '#/components/schemas/SecurityInfo'
        implSpecificInfo:
          type: object
          description: Additional implementation specific details of the transport
      description: This type represents the general information of a MEC service.
      example:
        implSpecificInfo: {}
        protocol: protocol
        endpoint: ""
        security:
          oAuth2Info:
            tokenEndpoint: tokenEndpoint
            grantTypes:
            - OAUTH2_AUTHORIZATION_CODE
            - OAUTH2_AUTHORIZATION_CODE
            - OAUTH2_AUTHORIZATION_CODE
            - OAUTH2_AUTHORIZATION_CODE
        name: name
        description: description
        id: id
        type: REST_HTTP
        version: version
    TransportType:
      title: TransportType
      type: string
      description: The enumeration TransportType represents types of transports
      enum:
      - REST_HTTP
      - MB_TOPIC_BASED
      - MB_ROUTING
      - MB_PUBSUB
      - RPC
      - RPC_STREAMING
      - WEBSOCKET
    appInstanceId_services_body:
      description: New ServiceInfo with updated "state" is included as entity body
        of the request
      oneOf:
      - type: object
      # - type: object
    ServiceInfo__links:
      required:
      - self
      type: object
      properties:
        self:
          $ref: '#/components/schemas/LinkType'
        liveness:
          $ref: '#/components/schemas/LinkType'
      example:
        liveness: null
        self:
          href: href
    ServiceLivenessInfo_timeStamp:
      required:
      - nanoSeconds
      - seconds
      type: object
      properties:
        seconds:
          type: integer
        nanoSeconds:
          type: integer
      description: The time when the last "heartbeat" message was received by MEC
        platform
      example:
        seconds: 0
        nanoSeconds: 6
  requestBodies:
    ServiceAvailabilityNotification:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ServiceAvailabilityNotification'
      required: true
  responses:
    "200":
      description: OK
    "204":
      description: No Content
    "400":
      description: "Bad Request : used to indicate that incorrect parameters were\
        \ passed to the request."
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    "401":
      description: "Unauthorized :  used when the client did not submit credentials."
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    "403":
      description: "Forbidden :  operation is not allowed given the current status\
        \ of the resource."
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    "404":
      description: "Not Found :  used when a client provided a URI that cannot be\
        \ mapped to a valid resource URI."
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    "406":
      description: "Not Acceptable : used to indicate that the server cannot provide\
        \ the any of the content formats supported by the client."
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    "412":
      description: "Precondition failed :  used when a condition has failed during\
        \ conditional requests, e.g. when using ETags to avoid write conflicts when\
        \ using PUT"
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    "414":
      description: "URI Too Long : used to indicate that the server is refusing to\
        \ process the request because the request URI is longer than the server is\
        \ willing or able to process."
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    "415":
      description: "Unsupported Media Type :  used to indicate that the server or\
        \ the client does not support the content type of the entity body."
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    "422":
      description: "Unprocessable Entity : used to indicate that the server understands\
        \ the content type of the request entity and that the syntax of the request\
        \ entity is correct but that the server is unable to process the contained\
        \ instructions. This error condition can occur if an JSON request body is\
        \ syntactically correct but semantically incorrect, for example if the target\
        \ area for the request is considered too large. This error condition can also\
        \ occur if the capabilities required by the request are not supported."
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
    "429":
      description: "Too Many Requests : used when a rate limiter has triggered."
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/ProblemDetails'
  parameters:
    Path.AccessPointId:
      name: accessPointId
      in: path
      description: Identifier of access Point
      required: true
      style: simple
      explode: false
      schema:
        type: string
      x-exportParamName: AccessPointId
    Path.SubscrId:
      name: subscriptionId
      in: path
      description: "Subscription Identifier, specifically the \"self\" returned in\
        \ the subscription request"
      required: true
      style: simple
      explode: false
      schema:
        type: string
        format: uri
      x-exportParamName: SubscriptionId
    Path.ZoneId:
      name: zoneId
      in: path
      description: Indentifier of zone
      required: true
      style: simple
      explode: false
      schema:
        type: string
      x-exportParamName: ZoneId
    Query.AccessPointId:
      name: accessPointId
      in: query
      description: Identifier of access point
      required: false
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
      x-exportParamName: AccessPointId
    Query.Address:
      name: address
      in: query
      description: "address of users (e.g. \"sip\" URI, \"tel\" URI, \"acr\" URI)"
      required: false
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
      x-exportParamName: Address
    Query.AddressMandatory:
      name: address
      in: query
      description: "address of users (e.g. \"sip\" URI, \"tel\" URI, \"acr\" URI)"
      required: true
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
      x-exportParamName: AddressMandatory
    Query.InterestRealm:
      name: interestRealm
      in: query
      description: "Interest realm of access point (e.g. geographical area, a type\
        \ of industry etc.)."
      required: false
      style: form
      explode: true
      schema:
        type: string
      x-exportParamName: InterestRealm
    Query.Latitude:
      name: latitude
      in: query
      description: Latitude geo position
      required: false
      style: form
      explode: true
      schema:
        type: number
        format: float
      x-exportParamName: Latitude
    Query.Longitude:
      name: longitude
      in: query
      description: Longitude geo position
      required: false
      style: form
      explode: true
      schema:
        type: number
        format: float
      x-exportParamName: Longitude
    Query.Requester:
      name: requester
      in: query
      description: Entity that is requesting the information
      required: false
      style: form
      explode: true
      schema:
        type: string
      x-exportParamName: Requester
    Query.ZoneId:
      name: zoneId
      in: query
      description: Identifier of zone
      required: false
      style: form
      explode: true
      schema:
        type: array
        items:
          type: string
      x-exportParamName: ZoneId

